diff --git a/client/javascript/EcomBuyableSelectField.js b/client/javascript/EcomBuyableSelectField.js
index 25c1cb86..44fa2432 100644
--- a/client/javascript/EcomBuyableSelectField.js
+++ b/client/javascript/EcomBuyableSelectField.js
@@ -38,6 +38,12 @@ const EcomBuyableSelectField = {
     this.url_segment = s
   },
 
+  joinWithSlash: (...strings) =>
+    strings
+      .map(str => (str.endsWith('/') ? str : `${str}/`))
+      .join('')
+      .slice(0, -1),
+
   /**
    * the class that is being added when we are searching...
    * @var String
@@ -192,11 +198,11 @@ const EcomBuyableSelectField = {
           EcomBuyableSelectField.requestTerm = request.term
           window.jQuery.ajax({
             type: 'POST',
-            url:
-              window.jQuery('base').attr('href') +
-              '/' +
-              EcomBuyableSelectField.url_segment +
-              '/json/',
+            url: EcomBuyableSelectField.joinWithSlash(
+              window.jQuery('base').attr('href'),
+              EcomBuyableSelectField.url_segment,
+              'json'
+            ),
             dataType: 'json',
             data: {
               term: request.term,
diff --git a/client/javascript/EcomCart.js b/client/javascript/EcomCart.js
index 355fdc01..eb7e679a 100644
--- a/client/javascript/EcomCart.js
+++ b/client/javascript/EcomCart.js
@@ -58,6 +58,12 @@ var EcomCart = {
     this.debug = b
   },
 
+  joinWithSlash: (...strings) =>
+    strings
+      .map(str => (str.endsWith('/') ? str : `${str}/`))
+      .join('')
+      .slice(0, -1),
+
   /**
    * selector to identify input field for selecting country.
    */
@@ -709,16 +715,15 @@ var EcomCart = {
    * @return String
    */
   createUrl: function (method, variable) {
-    var url =
-      window.jQuery('base').attr('href') +
-      '/' +
-      EcomCart.shoppingCartURLSegment +
-      '/'
+    var url = EcomCart.joinWithSlash(
+      window.jQuery('base').attr('href'),
+      EcomCart.shoppingCartURLSegment
+    )
     if (method) {
-      url += method + '/'
+      EcomCart.joinWithSlash(url, method)
     }
     if (variable) {
-      url += variable + '/'
+      EcomCart.joinWithSlash(url, variable)
     }
     return url
   },
diff --git a/client/javascript/EcomCart.min.js b/client/javascript/EcomCart.min.js
deleted file mode 100644
index 4285440e..00000000
--- a/client/javascript/EcomCart.min.js
+++ /dev/null
@@ -1,24 +0,0 @@
-var $jscomp={scope:{},findInternal:function(a,c,b){a instanceof String&&(a=String(a));for(var d=a.length,f=0;f<d;f++){var e=a[f];if(c.call(b,e,f,a))return{i:f,v:e}}return{i:-1,v:void 0}}};$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw new TypeError("ES3 does not support getters and setters.");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)};
-$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);$jscomp.polyfill=function(a,c,b,d){if(c){b=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var f=a[d];f in b||(b[f]={});b=b[f]}a=a[a.length-1];d=b[a];c=c(d);c!=d&&null!=c&&$jscomp.defineProperty(b,a,{configurable:!0,writable:!0,value:c})}};
-$jscomp.polyfill("Array.prototype.find",function(a){return a?a:function(a,b){return $jscomp.findInternal(this,a,b).v}},"es6-impl","es3");(function(a){a(document).ready(function(){EcomCart.init()})})(window.jQuery);
-var EcomCart={debug:!1,set_debug:function(a){this.debug=a},shoppingCartURLSegment:"shoppingcart",set_shoppingCartURLSegment:function(a){this.shoppingCartURLSegment=a},loadingSelectors:[],openAjaxCalls:0,cartHasItems:!1,initialData:[],set_initialData:function(a){this.initialData=a},reinitCallbacks:[],countryAndRegionRootSelector:"body",set_countryAndRegionRootSelector:function(a){this.countryAndRegionRootSelector=a},ajaxCountryFieldSelector:"select.ajaxCountryField",set_ajaxCountryFieldSelector:function(a){this.ajaxCountryFieldSelector=
-a},ajaxRegionFieldSelector:"select.ajaxRegionField",set_ajaxRegionFieldSelector:function(a){this.ajaxRegionFieldSelector=a},classToShowLoading:"loading",set_classToShowLoading:function(a){this.classToShowLoading=a},classToShowPageIsUpdating:"ecomCartIsUpdating",set_classToShowPageIsUpdating:function(a){this.classToShowPageIsUpdating=a},showClass:"show",set_showClass:function(a){this.showClass=a},hideClass:"hide",set_hideClass:function(a){this.hideClass=a},onBeforeUpdate:null,set_onBeforeUpdate:function(a){this.onBeforeUpdate=
-a},onAfterUpdate:null,set_onAfterUpdate:function(a){this.onAfterUpdate=a},synonyms:[],set_synonyms:function(a){this.synonyms=a},add_synonym:function(a,c){this.synonyms[a]=c},remove_synonym:function(a){this.synonyms.splice(a,1)},selectorShowOnZeroItems:".showOnZeroItems",set_selectorShowOnZeroItems:function(a){this.selectorShowOnZeroItems=a},selectorHideOnZeroItems:".hideOnZeroItems",set_selectorHideOnZeroItems:function(a){this.selectorHideOnZeroItems=a},selectorItemRows:"tr.orderitem",set_selectorItemRows:function(a){this.selectorItemRows=
-a},removeCartSelector:".ajaxRemoveFromCart",set_removeCartSelector:function(a){this.removeCartSelector=a},ajaxButtonsOn:!0,set_ajaxButtonsOn:function(a){this.ajaxButtonsOn=a},ajaxifyProductList:!1,set_ajaxifyProductList:function(a){this.ajaxifyProductList=a},productListIsFromCachedSource:!0,confirmDeleteText:"Are you sure you would like to remove this item from your cart?",set_confirmDeleteText:function(a){this.confirmDeleteText=a},ajaxLinksAreaSelector:"body",set_ajaxLinksAreaSelector:function(a){this.ajaxLinksAreaSelector=
-a},addLinkSelector:".ajaxBuyableAdd",set_addLinkSelector:function(a){this.addLinkSelector=a},removeLinkSelector:".ajaxBuyableRemove",set_removeLinkSelector:function(a){this.removeLinkSelector=a},orderItemHolderSelector:".orderItemHolder",set_orderItemHolderSelector:function(a){this.removeLinkSelector=a},cartMenuLinksSelector:".cartlink",set_cartMenuLinksSelector:function(a){this.cartMenuLinksSelector=a},ajaxifiedListAdjusterSelectors:".ajaxifyMyProductGroupLinks",set_ajaxifiedListAdjusterSelectors:function(a){this.ajaxifiedListAdjusterSelectors=
-a},ajaxifiedListHolderSelector:"#ProductGroup",set_ajaxifiedListHolderSelector:function(a){this.ajaxifiedListsSelector=a},hiddenPageTitleID:"#HiddenPageTitleID",set_hiddenPageTitleID:function(a){this.hiddenPageTitleID=a},ajaxifiedProductsCallBack:function(){},set_ajaxifiedProductsCallBack:function(a){this.ajaxifiedProductsCallBack=a},colorboxDialogSelector:".colorboxDialog",set_colorboxDialogSelector:function(a){this.colorboxDialogSelector=a},colorboxDialogOptions:{height:"95%",width:"95%",maxHeight:"95%",
-maxWidth:"95%",loadingClass:"loading",iframe:!0,onOpen:function(a){EcomCart.reinit(!0)}},set_colorboxDialogOptions:function(a){this.colorboxDialogOptions=a},init:function(){if("undefined"!==typeof EcomCartOptions)for(var a in EcomCartOptions)EcomCartOptions.hasOwnProperty(a)&&(this[a]=EcomCartOptions[a]);EcomCart.countryAndRegionUpdates();EcomCart.changeCountryFieldSwap();EcomCart.addAjaxificationOfProductList();EcomCart.ajaxButtonsOn&&(EcomCart.addAddLinks(EcomCart.ajaxLinksAreaSelector),EcomCart.addRemoveLinks(EcomCart.ajaxLinksAreaSelector),
-EcomCart.addCartRemove(EcomCart.ajaxLinksAreaSelector));EcomCart.initColorboxDialog();EcomCart.setChanges(EcomCart.initialData,"");window.onpopstate=function(a){a.state&&(window.jQuery(EcomCart.ajaxifiedListHolderSelector).html(a.state.html),document.title=a.state.pageTitle)}},reinit:function(a){a&&EcomCart.updateForZeroVSOneOrMoreRows();for(a=0;a<EcomCart.reinitCallbacks.length;a++)EcomCart.reinitCallbacks[a]()},countryAndRegionUpdates:function(){window.jQuery(EcomCart.countryAndRegionRootSelector).on("change",
-EcomCart.ajaxCountryFieldSelector,function(){var a=EcomCart.createUrl("setcountry",this.value);EcomCart.getChanges(a,null,this)});window.jQuery(EcomCart.countryAndRegionRootSelector).on("change",EcomCart.ajaxRegionFieldSelector,function(){var a=EcomCart.createUrl("setregion",this.value);EcomCart.getChanges(a,null,this)})},changeCountryFieldSwap:function(){window.jQuery(EcomCart.countryAndRegionRootSelector).on("change",EcomCart.selectorChangeCountryFieldHolder+" select",function(){var a=window.jQuery(EcomCart.selectorChangeCountryFieldHolder+
-" select").val();window.jQuery(EcomCart.ajaxCountryFieldSelector).val(a);a=EcomCart.createUrl("setcountry",a);EcomCart.getChanges(a,null,this);window.jQuery(EcomCart.selectorChangeCountryLink).click()})},addAjaxificationOfProductList:function(){if(EcomCart.ajaxifyProductList)window.jQuery(EcomCart.ajaxifiedListHolderSelector).on("click",EcomCart.ajaxifiedListAdjusterSelectors+" a",function(a){a.preventDefault();var c=window.jQuery(this).attr("href");window.jQuery.ajax({beforeSend:function(){window.jQuery(EcomCart.ajaxifiedListHolderSelector).addClass(EcomCart.classToShowLoading)},
-complete:function(){window.jQuery(EcomCart.ajaxifiedListHolderSelector).removeClass(EcomCart.classToShowLoading)},dataType:"html",error:function(a,d,f){alert("An error occurred ("+d+" "+f+")! I will try reloading the page now.");window.location.href=c},success:function(a,d,f){window.jQuery(EcomCart.ajaxifiedListHolderSelector).html(a);a=window.jQuery(EcomCart.hiddenPageTitleID).text();window.history.pushState({pageTitle:a},a,c);document.title=a;EcomCart.openAjaxCalls++;EcomCart.setChanges(EcomCart.initialData,"");"undefined"!=
-typeof EcomProducts&&EcomProducts.reinit();"function"==typeof EcomCart.ajaxifiedProductsCallBack&&EcomCart.ajaxifiedProductsCallBack();window.jQuery("html, body").animate({scrollTop:window.jQuery(EcomCart.ajaxifiedListHolderSelector).offset().top},500)},url:c})})},addAddLinks:function(a){window.jQuery(a).on("click",EcomCart.addLinkSelector,function(){var a=window.jQuery(this).attr("href");EcomCart.productListIsFromCachedSource&&(a+="&cached=1");EcomCart.getChanges(a,null,this);return!1})},addRemoveLinks:function(a){window.jQuery(a).on("click",
-EcomCart.removeLinkSelector,function(){if(EcomCart.unconfirmedDelete||confirm(EcomCart.confirmDeleteText)){var a=window.jQuery(this).attr("href");EcomCart.productListIsFromCachedSource&&(a+="&cached=1");EcomCart.getChanges(a,null,this)}return!1})},addCartRemove:function(a){window.jQuery(a).on("click",EcomCart.removeCartSelector,function(a){if(!EcomCart.confirmDeleteText||confirm(EcomCart.confirmDeleteText)){a=window.jQuery(this).attr("href");var b=window.jQuery(this).parents(EcomCart.orderItemHolderSelector);window.jQuery(b).slideUp("slow",
-function(){window.jQuery(b).remove()});EcomCart.getChanges(a,null,this)}return!1})},getChanges:function(a,c,b){null===c&&(c={});EcomCart.ajaxButtonsOn&&(c.ajaxButtonsOn=!0);1<EcomCart.openAjaxCalls&&(c.manyrequests=1);b=this.addLoadingSelector(b);c.loadingindex=b;EcomCart.onBeforeUpdate&&"function"==typeof EcomCart.onBeforeUpdate&&EcomCart.onBeforeUpdate.call(a,c,EcomCart.setChanges);EcomCart.openAjaxCalls++;window.jQuery.getJSON(a,c,EcomCart.setChanges)},addLoadingSelector:function(a){a=window.jQuery(a).parent().parent();
-window.jQuery(a).addClass(EcomCart.classToShowLoading);window.jQuery("body").addClass(EcomCart.classToShowPageIsUpdating);EcomCart.loadingSelectors[EcomCart.loadingSelectors.length]=a;return EcomCart.loadingSelectors.length-1},createUrl:function(a,c){var b=window.jQuery("base").attr("href")+EcomCart.shoppingCartURLSegment+"/";a&&(b+=a+"/");c&&(b+=c+"/");return b},setChanges:function(a,c){EcomCart.set_initialData(a);EcomCart.openAjaxCalls--;EcomCart.debug&&console.debug("------------- SET CHANGES -----------");if(a.reload)window.location=
-window.location;else if(0>=EcomCart.openAjaxCalls){for(var b in a){var d=a[b];if("undefined"!=typeof d.t){var f=d.t,e=d.s,h=d.p,g=EcomCart.escapeHTML(d.v);EcomCart.debug&&console.debug("type"+f+", selector: "+e+", parameter:"+h+", value");if("class"==f||"id"==f)"undefined"!=typeof EcomCart.synonyms[e]&&(e+=", "+EcomCart.synonyms[e]),e="id"==f?"#"+e+"":"."+e+"","hide"==h?g?window.jQuery(e).hide().addClass("hideForNow"):window.jQuery(e).show().removeClass("hideForNow"):"message"==h?window.jQuery(e).html(g):"innerHTML"==
-h?window.jQuery(e).each(function(a,b){window.jQuery(b).html(g)}):window.jQuery(e).attr(h,g),".number_of_items"==e&&(EcomCart.debug&&console.debug("doing .number_of_items"),d=parseFloat(g),EcomCart.debug&&console.debug("value "+d),EcomCart.cartHasItems=0<d?!0:!1,window.jQuery("a"+EcomCart.cartMenuLinksSelector+",  li"+EcomCart.cartMenuLinksSelector+" > a").each(function(a,b){var c=b;window.jQuery(b).is("a")||(c=window.jQuery(b).find("a"));var e=window.jQuery(c).html().replace(RegExp("(\\d+)","g"),g);window.jQuery(c).html(e)}));else if("name"==f)window.jQuery("[name="+
-e+"]").each(function(){window.jQuery(this).attr(h,g)});else if("dropdown"==f){if(e="#"+e+" select",0<window.jQuery(e).length&&0<g.length)for(window.jQuery(e).html(""),b=0;b<g.length;b++)d=h==g[b].id?' selected="selected" ':"",window.jQuery(e).append('<option value="'+g[b].id+'"'+d+">"+g[b].name+"</option>")}else if("newmodifierrow"!=f&&"newitemrow"!=f&&"replaceclass"==f){var k=d.without;EcomCart.debug&&console.debug("starting replaceclass process");window.jQuery("."+h).each(function(a,b){var c=window.jQuery(b).attr("id");EcomCart.debug&&
-console.debug("checking "+c);var d=!1;for(a=0;a<e.length;a++)EcomCart.debug&&console.debug("testing: '"+e[a]+"' AGAINST '"+c+"'"),c==e[a]&&(d=!0);d?window.jQuery(b).removeClass(k).addClass(g):window.jQuery(b).removeClass(g).addClass(k)})}}}EcomCart.onAfterUpdate&&"function"==typeof EcomCart.onAfterUpdate&&EcomCart.onAfterUpdate.call(a,c);EcomCart.reinit(0<a.length);window.jQuery("body").removeClass(EcomCart.classToShowPageIsUpdating);for(b=0;b<EcomCart.loadingSelectors.length;b++)window.jQuery(EcomCart.loadingSelectors[b]).removeClass(EcomCart.classToShowLoading)}},
-updateForZeroVSOneOrMoreRows:function(){EcomCart.cartHasItems?(window.jQuery(EcomCart.selectorShowOnZeroItems).hide(),window.jQuery(EcomCart.selectorHideOnZeroItems).each(function(a,c){window.jQuery(c).hasClass("hideForNow")||window.jQuery(c).show()})):(window.jQuery(EcomCart.selectorShowOnZeroItems).show(),window.jQuery(EcomCart.selectorHideOnZeroItems).hide())},escapeHTML:function(a){return a},variableIsSet:function(a){return"undefined"==typeof a||"undefined"==a?!1:!0},variableSetWithValue:function(a){return EcomCart.variableIsSet(a)&&
-a?!0:!1},initColorboxDialog:function(){window.jQuery(document).on("click",EcomCart.colorboxDialogSelector,function(a){EcomCart.colorboxDialogOptions.href=window.jQuery(this).attr("href");EcomCart.colorboxDialogOptions.open=!0;window.jQuery.colorbox(EcomCart.colorboxDialogOptions);return!1})}};
diff --git a/client/javascript/EcomCartWebPack.js b/client/javascript/EcomCartWebPack.js
index 9a4e8a5d..63c93c76 100644
--- a/client/javascript/EcomCartWebPack.js
+++ b/client/javascript/EcomCartWebPack.js
@@ -582,16 +582,14 @@ const EcomCart = {
                   EcomCart.ajaxifiedProductsCallBack()
                 }
                 // scroll to the top of the product list.
-                window
-                  .jQuery('html, body')
-                  .animate(
-                    {
-                      scrollTop: window
-                        .jQuery(EcomCart.ajaxifiedListHolderSelector)
-                        .offset().top
-                    },
-                    500
-                  )
+                window.jQuery('html, body').animate(
+                  {
+                    scrollTop: window
+                      .jQuery(EcomCart.ajaxifiedListHolderSelector)
+                      .offset().top
+                  },
+                  500
+                )
 
                 //fire an event to inform that data on the page has changed
                 const event = new Event('paginationchange')
@@ -718,6 +716,12 @@ const EcomCart = {
     return EcomCart.loadingSelectors.length - 1
   },
 
+  joinWithSlash: (...strings) =>
+    strings
+      .map(str => (str.endsWith('/') ? str : `${str}/`))
+      .join('')
+      .slice(0, -1),
+
   /**
    *
    *
@@ -725,16 +729,15 @@ const EcomCart = {
    * @return String
    */
   createUrl: function (method, variable) {
-    var url =
-      window.jQuery('base').attr('href') +
-      '/' +
-      EcomCart.shoppingCartURLSegment +
-      '/'
+    var url = EcomCartWebPack.joinWithSlash(
+      window.jQuery('base').attr('href'),
+      EcomCart.shoppingCartURLSegment
+    )
     if (method) {
-      url += method + '/'
+      EcomCart.joinWithSlash(url, method)
     }
     if (variable) {
-      url += variable + '/'
+      EcomCart.joinWithSlash(url, variable)
     }
     return url
   },
diff --git a/client/javascript/EcomCartWebPack.min.js b/client/javascript/EcomCartWebPack.min.js
deleted file mode 100644
index f322db1b..00000000
--- a/client/javascript/EcomCartWebPack.min.js
+++ /dev/null
@@ -1,38 +0,0 @@
-var $jscomp={scope:{},findInternal:function(a,c,b){a instanceof String&&(a=String(a));for(var d=a.length,f=0;f<d;f++){var e=a[f];if(c.call(b,e,f,a))return{i:f,v:e}}return{i:-1,v:void 0}}};$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw new TypeError("ES3 does not support getters and setters.");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)};
-$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);$jscomp.polyfill=function(a,c,b,d){if(c){b=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var f=a[d];f in b||(b[f]={});b=b[f]}a=a[a.length-1];d=b[a];c=c(d);c!=d&&null!=c&&$jscomp.defineProperty(b,a,{configurable:!0,writable:!0,value:c})}};
-$jscomp.polyfill("Array.prototype.find",function(a){return a?a:function(a,b){return $jscomp.findInternal(this,a,b).v}},"es6-impl","es3");var module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack={};(function(a){a(document).ready(function(){EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.init()})})(window.jQuery);
-var EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack={debug:!1,set_debug:function(a){this.debug=a},shoppingCartURLSegment:"shoppingcart",set_shoppingCartURLSegment:function(a){this.shoppingCartURLSegment=a},loadingSelectors:[],openAjaxCalls:0,cartHasItems:!1,initialData:[],set_initialData:function(a){this.initialData=a},reinitCallbacks:[],countryAndRegionRootSelector:"body",set_countryAndRegionRootSelector:function(a){this.countryAndRegionRootSelector=a},ajaxCountryFieldSelector:"select.ajaxCountryField",
-set_ajaxCountryFieldSelector:function(a){this.ajaxCountryFieldSelector=a},ajaxRegionFieldSelector:"select.ajaxRegionField",set_ajaxRegionFieldSelector:function(a){this.ajaxRegionFieldSelector=a},classToShowLoading:"loading",set_classToShowLoading:function(a){this.classToShowLoading=a},classToShowPageIsUpdating:"ecomCartIsUpdating",set_classToShowPageIsUpdating:function(a){this.classToShowPageIsUpdating=a},showClass:"show",set_showClass:function(a){this.showClass=a},hideClass:"hide",set_hideClass:function(a){this.hideClass=
-a},onBeforeUpdate:null,set_onBeforeUpdate:function(a){this.onBeforeUpdate=a},onAfterUpdate:null,set_onAfterUpdate:function(a){this.onAfterUpdate=a},synonyms:[],set_synonyms:function(a){this.synonyms=a},add_synonym:function(a,c){this.synonyms[a]=c},remove_synonym:function(a){this.synonyms.splice(a,1)},selectorShowOnZeroItems:".showOnZeroItems",set_selectorShowOnZeroItems:function(a){this.selectorShowOnZeroItems=a},selectorHideOnZeroItems:".hideOnZeroItems",set_selectorHideOnZeroItems:function(a){this.selectorHideOnZeroItems=
-a},selectorItemRows:"tr.orderitem",set_selectorItemRows:function(a){this.selectorItemRows=a},removeCartSelector:".ajaxRemoveFromCart",set_removeCartSelector:function(a){this.removeCartSelector=a},ajaxButtonsOn:!0,set_ajaxButtonsOn:function(a){this.ajaxButtonsOn=a},ajaxifyProductList:!1,set_ajaxifyProductList:function(a){this.ajaxifyProductList=a},productListIsFromCachedSource:!0,confirmDeleteText:"Are you sure you would like to remove this item from your cart?",set_confirmDeleteText:function(a){this.confirmDeleteText=
-a},ajaxLinksAreaSelector:"body",set_ajaxLinksAreaSelector:function(a){this.ajaxLinksAreaSelector=a},addLinkSelector:".ajaxBuyableAdd",set_addLinkSelector:function(a){this.addLinkSelector=a},removeLinkSelector:".ajaxBuyableRemove",set_removeLinkSelector:function(a){this.removeLinkSelector=a},orderItemHolderSelector:".orderItemHolder",set_orderItemHolderSelector:function(a){this.removeLinkSelector=a},cartMenuLinksSelector:".cartlink",set_cartMenuLinksSelector:function(a){this.cartMenuLinksSelector=
-a},ajaxifiedListAdjusterSelectors:".ajaxifyMyProductGroupLinks",set_ajaxifiedListAdjusterSelectors:function(a){this.ajaxifiedListAdjusterSelectors=a},ajaxifiedListHolderSelector:"#ProductGroup",set_ajaxifiedListHolderSelector:function(a){this.ajaxifiedListsSelector=a},hiddenPageTitleID:"#HiddenPageTitleID",set_hiddenPageTitleID:function(a){this.hiddenPageTitleID=a},ajaxifiedProductsCallBack:function(){},set_ajaxifiedProductsCallBack:function(a){this.ajaxifiedProductsCallBack=a},colorboxDialogSelector:".colorboxDialog",
-set_colorboxDialogSelector:function(a){this.colorboxDialogSelector=a},colorboxDialogOptions:{height:"95%",width:"95%",maxHeight:"95%",maxWidth:"95%",loadingClass:"loading",iframe:!0,onOpen:function(a){EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.reinit(!0)}},set_colorboxDialogOptions:function(a){this.colorboxDialogOptions=a},init:function(){if("undefined"!==typeof EcomCartOptions)for(var a in EcomCartOptions)EcomCartOptions.hasOwnProperty(a)&&(this[a]=EcomCartOptions[a]);
-EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.countryAndRegionUpdates();EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.changeCountryFieldSwap();EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.addAjaxificationOfProductList();EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.ajaxButtonsOn&&(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.addAddLinks(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.ajaxLinksAreaSelector),
-EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.addRemoveLinks(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.ajaxLinksAreaSelector),EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.addCartRemove(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.ajaxLinksAreaSelector));EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.initColorboxDialog();
-EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.setChanges(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.initialData,"");window.onpopstate=function(a){a.state&&(window.jQuery(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.ajaxifiedListHolderSelector).html(a.state.html),document.title=a.state.pageTitle)}},reinit:function(a){a&&EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.updateForZeroVSOneOrMoreRows();
-for(a=0;a<EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.reinitCallbacks.length;a++)EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.reinitCallbacks[a]()},countryAndRegionUpdates:function(){window.jQuery(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.countryAndRegionRootSelector).on("change",EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.ajaxCountryFieldSelector,
-function(){var a=EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.createUrl("setcountry",this.value);EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.getChanges(a,null,this)});window.jQuery(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.countryAndRegionRootSelector).on("change",EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.ajaxRegionFieldSelector,function(){var a=
-EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.createUrl("setregion",this.value);EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.getChanges(a,null,this)})},changeCountryFieldSwap:function(){window.jQuery(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.countryAndRegionRootSelector).on("change",EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.selectorChangeCountryFieldHolder+
-" select",function(){var a=window.jQuery(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.selectorChangeCountryFieldHolder+" select").val();window.jQuery(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.ajaxCountryFieldSelector).val(a);a=EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.createUrl("setcountry",a);EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.getChanges(a,
-null,this);window.jQuery(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.selectorChangeCountryLink).click()})},addAjaxificationOfProductList:function(){if(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.ajaxifyProductList)window.jQuery(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.ajaxifiedListHolderSelector).on("click",EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.ajaxifiedListAdjusterSelectors+
-" a",function(a){a.preventDefault();var c=window.jQuery(this).attr("href");window.jQuery.ajax({beforeSend:function(){window.jQuery(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.ajaxifiedListHolderSelector).addClass(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.classToShowLoading)},complete:function(){window.jQuery(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.ajaxifiedListHolderSelector).removeClass(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.classToShowLoading)},
-dataType:"html",error:function(a,d,f){alert("An error occurred ("+d+" "+f+")! I will try reloading the page now.");window.location.href=c},success:function(a,d,f){window.jQuery(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.ajaxifiedListHolderSelector).html(a);window.jQuery(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.hiddenPageTitleID).text();a=window.jQuery(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.hiddenPageTitleID).text();
-window.history.pushState({pageTitle:a},a,c);document.title=a;EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.openAjaxCalls++;EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.setChanges(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.initialData,"");"undefined"!=typeof EcomProducts&&EcomProducts.reinit();"function"==typeof EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.ajaxifiedProductsCallBack&&
-EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.ajaxifiedProductsCallBack();window.jQuery("html, body").animate({scrollTop:window.jQuery(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.ajaxifiedListHolderSelector).offset().top},500)},url:c})})},addAddLinks:function(a){window.jQuery(a).on("click",EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.addLinkSelector,function(){var a=window.jQuery(this).attr("href");EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.productListIsFromCachedSource&&
-(a+="&cached=1");EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.getChanges(a,null,this);return!1})},addRemoveLinks:function(a){window.jQuery(a).on("click",EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.removeLinkSelector,function(){if(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.unconfirmedDelete||confirm(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.confirmDeleteText)){var a=
-window.jQuery(this).attr("href");EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.productListIsFromCachedSource&&(a+="&cached=1");EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.getChanges(a,null,this)}return!1})},addCartRemove:function(a){window.jQuery(a).on("click",EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.removeCartSelector,function(a){if(!EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.confirmDeleteText||
-confirm(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.confirmDeleteText)){a=window.jQuery(this).attr("href");var b=window.jQuery(this).parents(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.orderItemHolderSelector);window.jQuery(b).slideUp("slow",function(){window.jQuery(b).remove()});EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.getChanges(a,null,this)}return!1})},getChanges:function(a,c,b){null===c&&(c={});EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.ajaxButtonsOn&&
-(c.ajaxButtonsOn=!0);1<EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.openAjaxCalls&&(c.manyrequests=1);b=this.addLoadingSelector(b);c.loadingindex=b;EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.onBeforeUpdate&&"function"==typeof EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.onBeforeUpdate&&EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.onBeforeUpdate.call(a,
-c,EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.setChanges);EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.openAjaxCalls++;window.jQuery.getJSON(a,c,EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.setChanges)},addLoadingSelector:function(a){a=window.jQuery(a).parent().parent();window.jQuery(a).addClass(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.classToShowLoading);window.jQuery("body").addClass(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.classToShowPageIsUpdating);
-EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.loadingSelectors[EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.loadingSelectors.length]=a;return EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.loadingSelectors.length-1},createUrl:function(a,c){var b=window.jQuery("base").attr("href")+EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.shoppingCartURLSegment+"/";a&&
-(b+=a+"/");c&&(b+=c+"/");return b},setChanges:function(a,c){EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.set_initialData(a);EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.openAjaxCalls--;EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.debug&&console.debug("------------- SET CHANGES -----------");if(a.reload)window.location=window.location;else if(0>=EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.openAjaxCalls){for(var b in a){var d=
-a[b];if("undefined"!=typeof d.t){var f=d.t,e=d.s,h=d.p,g=EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.escapeHTML(d.v);EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.debug&&console.debug("type"+f+", selector: "+e+", parameter:"+h+", value");if("class"==f||"id"==f)"undefined"!=typeof EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.synonyms[e]&&(e+=", "+EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.synonyms[e]),
-e="id"==f?"#"+e+"":"."+e+"","hide"==h?g?window.jQuery(e).hide().addClass("hideForNow"):window.jQuery(e).show().removeClass("hideForNow"):"message"==h?window.jQuery(e).html(g):"innerHTML"==h?window.jQuery(e).each(function(a,b){window.jQuery(b).html(g)}):window.jQuery(e).attr(h,g),".number_of_items"==e&&(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.debug&&console.debug("doing .number_of_items"),d=parseFloat(g),EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.debug&&console.debug("value "+
-d),EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.cartHasItems=0<d?!0:!1,window.jQuery("a"+EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.cartMenuLinksSelector+",  li"+EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.cartMenuLinksSelector+" > a").each(function(a,b){var c=b;window.jQuery(b).is("a")||(c=window.jQuery(b).find("a"));var e=window.jQuery(c).html().replace(RegExp("(\\d+)","g"),g);window.jQuery(c).html(e)}));else if("name"==
-f)window.jQuery("[name="+e+"]").each(function(){window.jQuery(this).attr(h,g)});else if("dropdown"==f){if(e="#"+e+" select",0<window.jQuery(e).length&&0<g.length)for(window.jQuery(e).html(""),b=0;b<g.length;b++)d=h==g[b].id?' selected="selected" ':"",window.jQuery(e).append('<option value="'+g[b].id+'"'+d+">"+g[b].name+"</option>")}else if("newmodifierrow"!=f&&"newitemrow"!=f&&"replaceclass"==f){var k=d.without;EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.debug&&console.debug("starting replaceclass process");
-window.jQuery("."+h).each(function(a,b){var c=window.jQuery(b).attr("id");EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.debug&&console.debug("checking "+c);var d=!1;for(a=0;a<e.length;a++)EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.debug&&console.debug("testing: '"+e[a]+"' AGAINST '"+c+"'"),c==e[a]&&(d=!0);d?window.jQuery(b).removeClass(k).addClass(g):window.jQuery(b).removeClass(g).addClass(k)})}}}EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.onAfterUpdate&&
-"function"==typeof EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.onAfterUpdate&&EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.onAfterUpdate.call(a,c);EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.reinit(0<a.length);window.jQuery("body").removeClass(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.classToShowPageIsUpdating);for(b=0;b<EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.loadingSelectors.length;b++)window.jQuery(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.loadingSelectors[b]).removeClass(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.classToShowLoading)}},
-updateForZeroVSOneOrMoreRows:function(){EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.cartHasItems?(window.jQuery(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.selectorShowOnZeroItems).hide(),window.jQuery(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.selectorHideOnZeroItems).each(function(a,c){window.jQuery(c).hasClass("hideForNow")||window.jQuery(c).show()})):(window.jQuery(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.selectorShowOnZeroItems).show(),
-window.jQuery(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.selectorHideOnZeroItems).hide())},escapeHTML:function(a){return a},variableIsSet:function(a){return"undefined"==typeof a||"undefined"==a?!1:!0},variableSetWithValue:function(a){return EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.variableIsSet(a)&&a?!0:!1},initColorboxDialog:function(){window.jQuery(document).on("click",EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.colorboxDialogSelector,
-function(a){EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.colorboxDialogOptions.href=window.jQuery(this).attr("href");EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.colorboxDialogOptions.open=!0;window.jQuery.colorbox(EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.colorboxDialogOptions);return!1})}};module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack.EcomCart=EcomCart$$module$$var$www$picspeanutbutter_com$ecommerce$javascript$EcomCartWebPack;
diff --git a/client/javascript/EcomOrderFormShipping.min.js b/client/javascript/EcomOrderFormShipping.min.js
deleted file mode 100644
index 7c41d9ed..00000000
--- a/client/javascript/EcomOrderFormShipping.min.js
+++ /dev/null
@@ -1,15 +0,0 @@
-if(null!==document.getElementById("OrderFormAddress_OrderFormAddress")&&"undefined"!==typeof document.getElementById("OrderFormAddress_OrderFormAddress")){(function(a){a(document).ready(function(){EcomOrderFormWithShippingAddress.init();EcomOrderFormWithShippingAddress.removeEmailFromShippingCityHack()})})(window.jQuery);var EcomOrderFormWithShippingAddress={copy_billing_to_shipping:!1,fieldArray:[],shippingFieldSelectors:"",billingFieldSelectors:"",formSelector:"#OrderFormAddress_OrderFormAddress",shippingSectionSelector:".shippingFieldsHeader, .shippingFields",
-useShippingDetailsSelector:"input[name='UseShippingAddress']",useShippingDetailsAlternativeSelector:"input[name='UseDifferentShippingAddress']",billingHeaderAttributeTitleAlternative:"data-title-with-shipping-address",shippingGeoCodingFieldSelector:"input[name='ShippingEcommerceGeocodingField']",countryToUpdateCartClass:"ajaxCountryField",regionToUpdateCartClass:"ajaxRegionField",closed:!1,init:function(){if(0<window.jQuery(EcomOrderFormWithShippingAddress.useShippingDetailsSelector).length){this.getListOfSharedFields();
-var a;for(a=0;a<EcomOrderFormWithShippingAddress.fieldArray.length;++a)0<a&&(EcomOrderFormWithShippingAddress.shippingFieldSelectors+=", ",EcomOrderFormWithShippingAddress.billingFieldSelectors+=", "),EcomOrderFormWithShippingAddress.shippingFieldSelectors+=EcomOrderFormWithShippingAddress.shippingFieldSelector(EcomOrderFormWithShippingAddress.fieldArray[a]),EcomOrderFormWithShippingAddress.billingFieldSelectors+=EcomOrderFormWithShippingAddress.billingFieldSelector(EcomOrderFormWithShippingAddress.fieldArray[a]);
-0<a&&(EcomOrderFormWithShippingAddress.turnOnListeners(),0<window.jQuery(EcomOrderFormWithShippingAddress.useShippingDetailsAlternativeSelector).length?window.jQuery(EcomOrderFormWithShippingAddress.useShippingDetailsAlternativeSelector).change():window.jQuery(EcomOrderFormWithShippingAddress.useShippingDetailsSelector).change())}window.jQuery(EcomOrderFormWithShippingAddress.shippingGeoCodingFieldSelector).removeAttr("required")},updateFields:function(){for(var a=this.hasShippingAddress(),b,c,d,e=0;e<EcomOrderFormWithShippingAddress.fieldArray.length;++e)b=
-EcomOrderFormWithShippingAddress.billingFieldSelector(EcomOrderFormWithShippingAddress.fieldArray[e]),c=EcomOrderFormWithShippingAddress.shippingFieldSelector(EcomOrderFormWithShippingAddress.fieldArray[e]),b=window.jQuery(b),c=window.jQuery(c),!0===a?(b.hasClass(EcomOrderFormWithShippingAddress.countryToUpdateCartClass)&&(b.removeClass(EcomOrderFormWithShippingAddress.countryToUpdateCartClass),c.addClass(EcomOrderFormWithShippingAddress.countryToUpdateCartClass)),b.hasClass(EcomOrderFormWithShippingAddress.regionToUpdateCartClass)&&
-(b.removeClass(EcomOrderFormWithShippingAddress.regionToUpdateCartClass),c.addClass(EcomOrderFormWithShippingAddress.regionToUpdateCartClass)),b=b.val(),d=c.val(),EcomOrderFormWithShippingAddress.closed?c.val(""):!d&&b&&EcomOrderFormWithShippingAddress.copy_billing_to_shipping&&c.val(b).change()):(c.hasClass(EcomOrderFormWithShippingAddress.countryToUpdateCartClass)&&(c.removeClass(EcomOrderFormWithShippingAddress.countryToUpdateCartClass),b.addClass(EcomOrderFormWithShippingAddress.countryToUpdateCartClass)),
-c.hasClass(EcomOrderFormWithShippingAddress.regionToUpdateCartClass)&&(c.removeClass(EcomOrderFormWithShippingAddress.regionToUpdateCartClass),b.addClass(EcomOrderFormWithShippingAddress.regionToUpdateCartClass)),c.hasClass("required")&&c.removeAttr("required").removeAttr("aria-required").removeAttr("data-has-required"));this.swapBillingHeader()},billingFieldSelector:function(a){a=a.replace("Shipping","");return" "+EcomOrderFormWithShippingAddress.formSelector+" input[name='"+a+"'], "+EcomOrderFormWithShippingAddress.formSelector+
-" select[name='"+a+"'], "+EcomOrderFormWithShippingAddress.formSelector+" textarea[name='"+a+"']"},shippingFieldSelector:function(a){a="Shipping"+a.replace("Billing","");return" "+EcomOrderFormWithShippingAddress.formSelector+" input[name='"+a+"'], "+EcomOrderFormWithShippingAddress.formSelector+" select[name='"+a+"'], "+EcomOrderFormWithShippingAddress.formSelector+" textarea[name='"+a+"']"},removeEmailFromShippingCityHack:function(){var a=window.jQuery(EcomOrderFormWithShippingAddress.shippingCitySelector).val();
-/^([a-zA-Z0-9_.-])+@([a-zA-Z0-9_.-])+\.([a-zA-Z])+([a-zA-Z])+/.test(a)&&window.jQuery(EcomOrderFormWithShippingAddress.shippingCitySelector).val(window.jQuery(EcomOrderFormWithShippingAddress.citySelector).val()).change()},getListOfSharedFields:function(){window.jQuery(this.formSelector+" input, "+this.formSelector+" select, "+this.formSelector+" textarea").each(function(a,b){var c=window.jQuery(b).attr("name");if("undefined"!==typeof c){var d=window.jQuery(b).attr("type");"undefined"!==typeof d&&"submit"!==d&&"hidden"!==d&&(d=EcomOrderFormWithShippingAddress.billingFieldSelector(c),
-0<window.jQuery(d).length&&EcomOrderFormWithShippingAddress.fieldArray.push(c))}})},turnOnListeners:function(){window.jQuery(EcomOrderFormWithShippingAddress.billingFieldSelectors).change(function(){EcomOrderFormWithShippingAddress.updateFields()});window.jQuery(EcomOrderFormWithShippingAddress.shippingFieldSelectors).focus(function(){EcomOrderFormWithShippingAddress.updateFields()});window.jQuery(EcomOrderFormWithShippingAddress.useShippingDetailsSelector).change(function(){EcomOrderFormWithShippingAddress.hasShippingAddress()?
-(window.jQuery(EcomOrderFormWithShippingAddress.shippingSectionSelector).slideDown(),window.jQuery(EcomOrderFormWithShippingAddress.shippingFieldSelector(EcomOrderFormWithShippingAddress.fieldArray[0])).focus(),window.jQuery(EcomOrderFormWithShippingAddress.shippingFieldSelectors).each(function(a,b){window.jQuery(b).hasClass("required")&&window.jQuery(b).attr("required","required").attr("aria-required",!0).attr("aria-required",!0).attr("data-has-required","yes")}),EcomOrderFormWithShippingAddress.closed=!1):(window.jQuery(EcomOrderFormWithShippingAddress.shippingSectionSelector).slideUp(),
-window.jQuery(EcomOrderFormWithShippingAddress.shippingFieldSelectors).each(function(a,b){window.jQuery(b).hasClass("required")&&window.jQuery(b).removeAttr("required").removeAttr("aria-required").removeAttr("data-has-required")}),EcomOrderFormWithShippingAddress.closed=!0);EcomOrderFormWithShippingAddress.makeSureOnlyTheRightCountriesCanBeSelected();EcomOrderFormWithShippingAddress.updateFields()});0<window.jQuery(EcomOrderFormWithShippingAddress.useShippingDetailsAlternativeSelector).length&&window.jQuery(EcomOrderFormWithShippingAddress.useShippingDetailsAlternativeSelector).change(function(a){!0===
-window.jQuery(EcomOrderFormWithShippingAddress.useShippingDetailsAlternativeSelector).is(":checked")?window.jQuery(EcomOrderFormWithShippingAddress.useShippingDetailsSelector).attr("checked","checked").val("1"):window.jQuery(EcomOrderFormWithShippingAddress.useShippingDetailsSelector).removeAttr("checked","checked").val("0");window.jQuery(EcomOrderFormWithShippingAddress.useShippingDetailsSelector).change()})},swapBillingHeader:function(){var a=window.jQuery(this.formSelector+"_BillingDetails"),b=this.hasShippingAddress()?this.billingHeaderAttributeTitleAlternative:
-this.billingHeaderAttributeTitleAlternative+"_default",b=a.attr(b);a.text(b)},hasShippingAddress:function(){return window.jQuery(EcomOrderFormWithShippingAddress.useShippingDetailsSelector+'[type="hidden"]')?"1"==window.jQuery(EcomOrderFormWithShippingAddress.useShippingDetailsSelector).val():window.jQuery(EcomOrderFormWithShippingAddress.useShippingDetailsSelector).is(":checked")},makeSureOnlyTheRightCountriesCanBeSelected:function(){if("undefined"!==typeof CountryPrice_SetCountriesForDelivery_New&&"undefined"!==typeof CountryPrice_SetCountriesForDelivery_Original){var a=
-this.hasShippingAddress()?CountryPrice_SetCountriesForDelivery_Original:CountryPrice_SetCountriesForDelivery_New,b=window.jQuery("select[name='Country']");EcomOrderFormWithShippingAddress.swappingOptions(b,a)}},swappingOptions:function(a,b){var c=window.jQuery(a).val();window.jQuery(a).empty();$.each(b,function(b,c){a.append($("<option></option>").attr("value",b).text(c))});window.jQuery(a).val(c)}}};
diff --git a/client/javascript/EcomPayment.min.js b/client/javascript/EcomPayment.min.js
deleted file mode 100644
index 1b4ecac2..00000000
--- a/client/javascript/EcomPayment.min.js
+++ /dev/null
@@ -1,2 +0,0 @@
-if(null!==document.getElementById("PaymentMethod")&&"undefined"!==typeof document.getElementById("PaymentMethod")){(function(a){a(document).ready(function(){EcomPayment.init()})})(window.jQuery);var EcomPayment={paymentInputsSelectorParent:"#PaymentMethod",paymentInputsSelector:"#PaymentMethod input[type=radio]",paymentFieldSelector:"div.paymentfields",paymentMethodPrefix:".methodFields_",init:function(){var a=window.jQuery(EcomPayment.paymentInputsSelector),b=window.jQuery(EcomPayment.paymentFieldSelector);b.hide();
-a.each(function(a){1==window.jQuery(this).attr("checked")&&window.jQuery(EcomPayment.paymentMethodPrefix+window.jQuery(this).attr("value")).show()});a.click(function(a){b.hide();window.jQuery(EcomPayment.paymentMethodPrefix+window.jQuery(this).attr("value")).show()});window.jQuery(EcomPayment.paymentInputsSelector).first().click();1==window.jQuery(EcomPayment.paymentInputsSelector).length&&window.jQuery(EcomPayment.paymentInputsSelectorParent).hide()}};window.jQuery(EcomPayment.paymentFieldSelector).hide()};
diff --git a/client/javascript/EcomQuantityField.js b/client/javascript/EcomQuantityField.js
index f81c2d85..bb98dede 100644
--- a/client/javascript/EcomQuantityField.js
+++ b/client/javascript/EcomQuantityField.js
@@ -16,6 +16,12 @@ if (typeof require === 'undefined') {
 }
 
 var EcomQuantityField = {
+  joinWithSlash: (...strings) =>
+    strings
+      .map(str => (str.endsWith('/') ? str : `${str}/`))
+      .join('')
+      .slice(0, -1),
+
   //todo: make more specific! some selector that holds true for all cart holders.
   hidePlusAndMinues: true,
 
@@ -163,13 +169,16 @@ var EcomQuantityField = {
                 } else {
                   URLSegment = URLSegment + '&'
                 }
-                var url =
-                  window.jQuery('base').attr('href').replace(/\/$/, '') +
-                  '/' +
-                  URLSegment +
-                  'quantity=' +
-                  this.value
+                var url = EcomQuantityField.joinWithSlash(
+                  window.jQuery('base').attr('href'),
+                  URLSegment
+                )
+                // add quantity
+                url += 'quantity=' + this.value
+
+                // no double-encoded ampersands
                 url = url.replace('&amp;', '&')
+
                 if (typeof EcomQuantityField.EcomCart !== 'undefined') {
                   EcomQuantityField.EcomCart.getChanges(url, null, this)
                 } else if (typeof EcomCart !== 'undefined') {
diff --git a/client/javascript/UTMReferralPointer.js b/client/javascript/UTMReferralPointer.js
new file mode 100644
index 00000000..bbd26dbb
--- /dev/null
+++ b/client/javascript/UTMReferralPointer.js
@@ -0,0 +1,86 @@
+const getVarsToExpect = [
+  'utm_source',
+  'utm_medium',
+  'utm_campaign',
+  'utm_term',
+  'utm_content',
+  'fbclid',
+  'gad',
+  'gclid',
+  'gclsrc',
+  'twclid'
+]
+function getUTMParameters () {
+  // console.log('getting params from url')
+  const params = new URLSearchParams(window.location.search)
+  const utmParams = {}
+  getVarsToExpect.forEach(param => {
+    if (params.has(param)) {
+      utmParams[param] = params.get(param)
+    }
+  })
+  return utmParams
+}
+
+function saveToLocalStorage (data) {
+  for (const key in data) {
+    localStorage.setItem(key, data[key])
+  }
+}
+
+function getUTMDataFromLocalStorage () {
+  // console.log('getting data from local storage')
+  const utmData = {}
+  getVarsToExpect.forEach(param => {
+    const value = localStorage.getItem(param)
+    if (value) {
+      utmData[param] = value
+    }
+  })
+  return utmData
+}
+
+function clearLocalStorage () {
+  // console.log('clearing local storage')
+  getVarsToExpect.forEach(param => {
+    localStorage.removeItem(param)
+  })
+}
+
+function sendUTMDataToServer (utmData) {
+  // console.log('sending to server')
+  const baseTag = document.querySelector('base')
+  let baseHref = baseTag ? baseTag.getAttribute('href') : null
+
+  if (baseHref) {
+    // Remove trailing slash if it exists
+    baseHref = baseHref.endsWith('/') ? baseHref.slice(0, -1) : baseHref
+    const queryParams = new URLSearchParams(utmData).toString()
+    const url = `${baseHref}/shoppingcart/addreferral?${queryParams}`
+
+    fetch(url)
+      .then(response => response.text())
+      .then(data => {
+        // console.log(data)
+        if (parseInt(data) > 0) {
+          clearLocalStorage()
+        }
+      })
+      .catch(error => console.error('Error:', error))
+  }
+}
+
+const searchParams = window.location.search
+const itemsToCheck = getVarsToExpect
+
+// Main execution
+let utmParams = getUTMParameters()
+if (Object.keys(utmParams).length > 0) {
+  saveToLocalStorage(utmParams)
+} else {
+  utmParams = getUTMDataFromLocalStorage()
+}
+
+if (Object.keys(utmParams).length > 0) {
+  sendUTMDataToServer(utmParams)
+}
diff --git a/src/Api/ShoppingCart.php b/src/Api/ShoppingCart.php
index 2d4660bc..793529ed 100644
--- a/src/Api/ShoppingCart.php
+++ b/src/Api/ShoppingCart.php
@@ -4,6 +4,7 @@ namespace Sunnysideup\Ecommerce\Api;
 
 use SilverStripe\Control\Controller;
 use SilverStripe\Control\Director;
+use SilverStripe\Control\Session;
 use SilverStripe\Core\Config\Configurable;
 use SilverStripe\Core\Convert;
 use SilverStripe\Core\Extensible;
@@ -27,6 +28,7 @@ use Sunnysideup\Ecommerce\Model\Order;
 use Sunnysideup\Ecommerce\Model\OrderItem;
 use Sunnysideup\Ecommerce\Model\OrderModifier;
 use Sunnysideup\Ecommerce\Model\Process\OrderStep;
+use Sunnysideup\Ecommerce\Model\Process\Referral;
 use Sunnysideup\Ecommerce\Tasks\EcommerceTaskCartCleanup;
 
 /*
@@ -1162,6 +1164,19 @@ class ShoppingCart
         $this->messages[] = ['Message' => $message, 'Type' => $status];
     }
 
+    public function addReferral($params): int
+    {
+        if(count($params)) {
+            $order = $this->currentOrder();
+            if($order && $order->exists()) {
+                if(Referral::add_referral($order, $params)) {
+                    return $order->ID;
+                }
+            }
+        }
+        return -2;
+    }
+
     // UI MESSAGE HANDLING
 
     /**
@@ -1173,18 +1188,12 @@ class ShoppingCart
     {
         $sessionVariableName = $this->sessionVariableName('Messages');
         $messages = [];
-        $curr = Controller::curr();
-        if ($curr) {
-            $request = $curr->getRequest();
-            if ($request) {
-                $session = $request->getSession();
-                if ($session) {
-                    //get old messages
-                    $messages = unserialize((string) $session->get($sessionVariableName));
-                    //clear old messages
-                    $session->clear($sessionVariableName);
-                }
-            }
+        $session = $this->getSession();
+        if ($session) {
+            //get old messages
+            $messages = unserialize((string) $session->get($sessionVariableName));
+            //clear old messages
+            $session->clear($sessionVariableName);
         }
 
         //set to form????
@@ -1195,6 +1204,18 @@ class ShoppingCart
         return $this->messages;
     }
 
+    protected function getSession(): ?Session
+    {
+        $curr = Controller::curr();
+        if ($curr) {
+            $request = $curr->getRequest();
+            if ($request) {
+                return $request->getSession();
+            }
+        }
+        return null;
+    }
+
     /**
      * This method is used to return data after an ajax call was made.
      * When a asynchronious request is made to the shopping cart (ajax),
@@ -1217,10 +1238,10 @@ class ShoppingCart
         }
 
         // recalculate... this is often a change so well worth it.
-        $this->currentOrder();
-        if($this->order) {
+        $order = $this->currentOrder();
+        if($order) {
             //todo- why would there not be an order?
-            $this->order->calculateOrderAttributes($recalculate = true);
+            $order->calculateOrderAttributes($recalculate = true);
         }
 
         //TODO: handle passing back multiple messages
diff --git a/src/Cms/SalesAdminProcess.php b/src/Cms/SalesAdminProcess.php
index 7534d99b..3f6f2791 100644
--- a/src/Cms/SalesAdminProcess.php
+++ b/src/Cms/SalesAdminProcess.php
@@ -6,6 +6,7 @@ use SilverStripe\Admin\ModelAdmin;
 use SilverStripe\View\Requirements;
 use Sunnysideup\Ecommerce\Model\Process\OrderFeedback;
 use Sunnysideup\Ecommerce\Model\Process\OrderProcessQueue;
+use Sunnysideup\Ecommerce\Model\Process\Referral;
 use Sunnysideup\Ecommerce\Traits\EcommerceModelAdminTrait;
 
 /**
@@ -43,8 +44,9 @@ class SalesAdminProcess extends ModelAdmin
      * @var array
      */
     private static $managed_models = [
-        OrderProcessQueue::class,
+        Referral::class,
         OrderFeedback::class,
+        OrderProcessQueue::class,
     ];
 
     /**
diff --git a/src/Control/ShoppingCartController.php b/src/Control/ShoppingCartController.php
index 52d28565..9ba9de05 100644
--- a/src/Control/ShoppingCartController.php
+++ b/src/Control/ShoppingCartController.php
@@ -77,6 +77,7 @@ class ShoppingCartController extends Controller
         'json',
         'index',
         'additem',
+        'addreferral',
         'removeitem',
         'removeallitem',
         'removeallitemandedit',
@@ -313,10 +314,9 @@ class ShoppingCartController extends Controller
      */
     public function additem(HTTPRequest $request)
     {
-        /** Buya*/
         $buyable = $this->buyable();
         if ($buyable) {
-            $this->cart->addBuyable($buyable, $this->quantity(), $this->parameters());
+            $this->cart->addBuyable($buyable, $this->quantity(), $this->parameters(true));
 
             return $this->cart->setMessageAndReturn();
         }
@@ -324,6 +324,20 @@ class ShoppingCartController extends Controller
         return $this->goToErrorPage();
     }
 
+    /**
+     * Adds item to cart via controller action; one by default.
+     *
+     * @return mixed - if the request is AJAX, it returns JSON - CartResponse::ReturnCartData();
+     *               If it is not AJAX it redirects back to requesting page
+     */
+    public function addreferral(HTTPRequest $request)
+    {
+        if($this->cart) {
+            return $this->cart->addReferral($this->parameters(true));
+        }
+        return -1;
+    }
+
     /**
      * Sets the exact passed quantity.
      * Note: If no ?quantity=x is specified in URL, then quantity will be set to 1.
@@ -335,7 +349,7 @@ class ShoppingCartController extends Controller
     {
         $buyable = $this->buyable();
         if ($buyable) {
-            $this->cart->setQuantity($buyable, $this->quantity(), $this->parameters());
+            $this->cart->setQuantity($buyable, $this->quantity(), $this->parameters(true));
 
             return $this->cart->setMessageAndReturn();
         }
@@ -353,7 +367,7 @@ class ShoppingCartController extends Controller
     {
         $buyable = $this->buyable();
         if ($buyable) {
-            $this->cart->decrementBuyable($buyable, $this->quantity(), $this->parameters());
+            $this->cart->decrementBuyable($buyable, $this->quantity(), $this->parameters(true));
 
             return $this->cart->setMessageAndReturn();
         }
@@ -371,7 +385,7 @@ class ShoppingCartController extends Controller
     {
         $buyable = $this->buyable();
         if ($buyable) {
-            $this->cart->deleteBuyable($buyable, $this->parameters());
+            $this->cart->deleteBuyable($buyable, $this->parameters(true));
             //added this because cart was not updating correctly
             // $order = $this->cart->CurrentOrder();
             // $order->calculateOrderAttributes($recalculate = true);
@@ -394,7 +408,7 @@ class ShoppingCartController extends Controller
         $buyable = $this->buyable();
         if ($buyable) {
             $link = $buyable->Link();
-            $this->cart->deleteBuyable($buyable, $this->parameters());
+            $this->cart->deleteBuyable($buyable, $this->parameters(true));
             $this->redirect($link);
         } else {
             $this->redirectBack();
@@ -781,19 +795,17 @@ class ShoppingCartController extends Controller
     {
         parent::init();
         $action = $this->request->param('Action');
-        if (! isset($_GET['cached'])) {
-            if ($action && (in_array($action, $this->methodsRequiringSecurityID, true))) {
-                $savedSecurityID = $this->getRequest()->getSession()->get('SecurityID');
+        if ($action && (in_array($action, $this->methodsRequiringSecurityID, true))) {
+            $savedSecurityID = $this->getRequest()->getSession()->get('SecurityID');
+            if ($savedSecurityID) {
+                if (! isset($_GET['SecurityID'])) {
+                    $_GET['SecurityID'] = '';
+                }
                 if ($savedSecurityID) {
-                    if (! isset($_GET['SecurityID'])) {
-                        $_GET['SecurityID'] = '';
-                    }
-                    if ($savedSecurityID) {
-                        if ($_GET['SecurityID'] !== $savedSecurityID) {
-                            $this->httpError(400, "Security token doesn't match, possible CSRF attack.");
-                        }
-                        //all OK!
+                    if ($_GET['SecurityID'] !== $savedSecurityID) {
+                        $this->httpError(400, "Security token doesn't match, possible CSRF attack.");
                     }
+                    //all OK!
                 }
             }
         }
@@ -888,9 +900,10 @@ class ShoppingCartController extends Controller
      *
      * @return array
      */
-    protected function parameters(?string $getpost = 'GET')
+    protected function parameters(?bool $getVars = true)
     {
-        return 'GET' === $getpost ? $this->getRequest()->getVars() : $_POST;
+        // TODO: postvars do not seem to work!!!
+        return $getVars ? $this->getRequest()->getVars() : $this->getRequest()->postVars();
     }
 
     protected function goToErrorPage()
diff --git a/src/Email/OrderEmail.php b/src/Email/OrderEmail.php
index 85bdc49b..b1c06952 100644
--- a/src/Email/OrderEmail.php
+++ b/src/Email/OrderEmail.php
@@ -143,13 +143,13 @@ abstract class OrderEmail extends Email
     /**
      *
      */
-    public function sendInner(?bool $returnBodyOnly = false): ?string
+    protected function sendInner(?bool $returnBodyOnly = false): ?string
     {
-        if (! $this->order) {
+        if (!$this->order) {
             user_error('Must set the order (OrderEmail::setOrder()) before the message is sent (OrderEmail::send()).', E_USER_NOTICE);
         }
         $this->fixupSubject();
-        if (! $this->hasBeenSent() || ($this->resend)) {
+        if (!$this->hasBeenSent() || ($this->resend)) {
             if (EcommerceConfig::get(OEmailrderEmail::class, 'copy_to_admin_for_all_emails') && ($this->getTo() !== self::get_from_email())) {
                 $memberEmail = self::get_from_email();
                 if ($memberEmail) {
@@ -166,7 +166,6 @@ abstract class OrderEmail extends Email
             if ($returnBodyOnly) {
                 return (string) $this->getHtmlBody();
             }
-
             if (EcommerceConfig::get(OrderEmail::class, 'send_all_emails_plain')) {
                 parent::sendPlain();
             } else {
@@ -197,7 +196,7 @@ abstract class OrderEmail extends Email
 
     protected function fixupSubject()
     {
-        if (! $this->getSubject()) {
+        if (!$this->getSubject()) {
             $this->setSubject(self::get_subject());
         }
         $this->setSubject(str_replace('[OrderNumber]', $this->order->ID, (string) $this->getSubject()));
@@ -257,7 +256,7 @@ abstract class OrderEmail extends Email
         $plainOnly = (bool) $plainOnly;
         parent::render($plainOnly);
         //moves CSS to inline CSS in email.
-        if (! $plainOnly) {
+        if (!$plainOnly) {
             $html = (string) ($this->getHtmlBody() ?: '');
             $this->setBody($html);
         }
@@ -293,9 +292,9 @@ abstract class OrderEmail extends Email
         $sendAllEmailsTo = Config::inst()->get(Email::class, 'send_all_emails_to');
         if ($sendAllEmailsTo) {
             $orderEmailRecord->To .=
-                _t('OrderEmail.ACTUALLY_SENT_TO', ' | actually sent to: ')
-                . $sendAllEmailsTo
-                . _t('OrderEmail.CONFIG_EXPLANATION', ' - (Email::send_all_emails_to)');
+            _t('OrderEmail.ACTUALLY_SENT_TO', ' | actually sent to: ')
+            . $sendAllEmailsTo
+            . _t('OrderEmail.CONFIG_EXPLANATION', ' - (Email::send_all_emails_to)');
         }
         $orderEmailRecord->write();
 
diff --git a/src/Forms/Fields/EcommerceCMSButtonField.php b/src/Forms/Fields/EcommerceCMSButtonField.php
index 20187ad7..af491d54 100644
--- a/src/Forms/Fields/EcommerceCMSButtonField.php
+++ b/src/Forms/Fields/EcommerceCMSButtonField.php
@@ -14,7 +14,7 @@ class EcommerceCMSButtonField extends LiteralField
      * @param mixed  $link      (string|ViewableData|FormField)
      * @param bool   $newWindow
      */
-    public function __construct($name, $link, string $title, ?bool $newWindow = false)
+    public function __construct(string $name, string $link, string $title, ?bool $newWindow = false)
     {
         $target = '';
         if ($newWindow) {
diff --git a/src/Forms/Gridfield/GridFieldExportSalesButton.php b/src/Forms/Gridfield/GridFieldExportSalesButton.php
index e1e5f756..42a73720 100644
--- a/src/Forms/Gridfield/GridFieldExportSalesButton.php
+++ b/src/Forms/Gridfield/GridFieldExportSalesButton.php
@@ -97,8 +97,7 @@ class GridFieldExportSalesButton extends GridFieldExportButton implements GridFi
             'exportsales',
             null
         );
-        $button->setAttribute('data-icon', 'download-csv');
-        $button->addExtraClass('no-ajax action_export');
+        $button->addExtraClass('action btn btn-secondary no-ajax font-icon-down-circled action_export');
         $button->setForm($gridField->getForm());
 
         return [
diff --git a/src/Forms/Gridfield/GridFieldPrintAllInvoicesButton.php b/src/Forms/Gridfield/GridFieldPrintAllInvoicesButton.php
index 86353e3c..f14c2d52 100644
--- a/src/Forms/Gridfield/GridFieldPrintAllInvoicesButton.php
+++ b/src/Forms/Gridfield/GridFieldPrintAllInvoicesButton.php
@@ -54,8 +54,7 @@ class GridFieldPrintAllInvoicesButton implements GridField_HTMLProvider, GridFie
             'printallinvoices',
             null
         );
-        $button->setAttribute('data-icon', 'grid_print');
-        $button->addExtraClass('no-ajax action_print_all_invoices');
+        $button->addExtraClass('action_print_all_invoices action btn btn-secondary no-ajax font-icon-down-circled action_export');
         $button->setForm($gridField->getForm());
 
         return [
diff --git a/src/Forms/Gridfield/GridFieldPrintAllPackingSlipsButton.php b/src/Forms/Gridfield/GridFieldPrintAllPackingSlipsButton.php
index 4a1c83f5..3bddf4c2 100644
--- a/src/Forms/Gridfield/GridFieldPrintAllPackingSlipsButton.php
+++ b/src/Forms/Gridfield/GridFieldPrintAllPackingSlipsButton.php
@@ -54,8 +54,7 @@ class GridFieldPrintAllPackingSlipsButton implements GridField_HTMLProvider, Gri
             'printallpackingslips',
             null
         );
-        $button->setAttribute('data-icon', 'grid_print');
-        $button->addExtraClass('no-ajax action_print_all_packing_slips');
+        $button->addExtraClass('action_print_all_packing_slips action btn btn-secondary no-ajax font-icon-down-circled action_export');
         $button->setForm($gridField->getForm());
 
         return [
diff --git a/src/Forms/Gridfield/GridFieldPrintInvoiceButton.php b/src/Forms/Gridfield/GridFieldPrintInvoiceButton.php
index 2bff4008..7b0d29c2 100644
--- a/src/Forms/Gridfield/GridFieldPrintInvoiceButton.php
+++ b/src/Forms/Gridfield/GridFieldPrintInvoiceButton.php
@@ -81,9 +81,8 @@ class GridFieldPrintInvoiceButton implements GridField_ColumnProvider, GridField
                 'printinvoice',
                 ['RecordID' => $record->ID]
             )
-                ->addExtraClass('gridfield-button-printinvoice')
+                ->addExtraClass('gridfield-button-printinvoice action btn btn-secondary no-ajax font-icon-down-circled action_export ')
                 ->setAttribute('title', _t('GridAction.PRINT_INVOICE', 'Invoice'))
-                ->setAttribute('data-icon', 'grid_print')
                 ->setAttribute('onclick', $onclickStatement)
                 ->setDescription(_t('GridAction.PRINT_INVOICE_DESCRIPTION', 'Print Invoice'))
                 ->Field()
@@ -127,7 +126,9 @@ class GridFieldPrintInvoiceButton implements GridField_ColumnProvider, GridField
     public function handleAction(GridField $gridField, $actionName, $arguments, $data)
     {
         if ('printinvoice' === $actionName) {
-            $item = $gridField->getList()->byID($arguments['RecordID']);
+            /** @var DataList $list */
+            $list = $gridField->getList();
+            $item = $list->byID($arguments['RecordID']);
             if (! $item) {
                 return;
             }
diff --git a/src/Forms/Gridfield/GridFieldPrintPackingSlipButton.php b/src/Forms/Gridfield/GridFieldPrintPackingSlipButton.php
index 174234a8..f09dec5b 100644
--- a/src/Forms/Gridfield/GridFieldPrintPackingSlipButton.php
+++ b/src/Forms/Gridfield/GridFieldPrintPackingSlipButton.php
@@ -82,7 +82,6 @@ class GridFieldPrintPackingSlipButton implements GridField_ColumnProvider, GridF
         )
             ->addExtraClass('gridfield-button-printpackingslip')
             ->setAttribute('title', _t('GridPacking Slip.PRINT_PACKING_SLIP', 'Packing Slip'))
-            ->setAttribute('data-icon', 'download-csv')
             ->setAttribute('onclick', $onclickStatement)
             ->setDescription(_t('GridPacking Slip.PRINT_PACKING_SLIP_DESCRIPTION', 'Print Packing Slip'))
             ->Field()
diff --git a/src/Model/Config/EcommerceDBConfig.php b/src/Model/Config/EcommerceDBConfig.php
index 9b92d807..3df498c9 100644
--- a/src/Model/Config/EcommerceDBConfig.php
+++ b/src/Model/Config/EcommerceDBConfig.php
@@ -739,7 +739,7 @@ class EcommerceDBConfig extends DataObject implements EditableEcommerceObject
             new GridFieldToolbarHeader(),
             new GridFieldSortableHeader(),
             new GridFieldDataColumns(),
-            new GridFieldPaginator(10),
+            new GridFieldPaginator(200),
             new GridFieldEditButton(),
             new GridFieldDeleteAction(),
             new GridFieldDetailForm()
diff --git a/src/Model/Extensions/ErrorPageExtension.php b/src/Model/Extensions/ErrorPageExtension.php
index 008a14b4..d2a33857 100644
--- a/src/Model/Extensions/ErrorPageExtension.php
+++ b/src/Model/Extensions/ErrorPageExtension.php
@@ -26,8 +26,10 @@ class ErrorPageExtension extends Extension
     {
         $product = $this->urlToProduct($request);
         if ($product) {
+            $getVars = $request->getVars();
+            $dest = $product->Link() . '?' . http_build_query($getVars);
+
             $response = new HTTPResponse();
-            $dest = $product->Link();
             $response->redirect(Director::absoluteURL($dest), '302');
 
             throw new HTTPResponse_Exception($response);
diff --git a/src/Model/Order.php b/src/Model/Order.php
index 7616326f..07c9764e 100644
--- a/src/Model/Order.php
+++ b/src/Model/Order.php
@@ -572,7 +572,7 @@ class Order extends DataObject implements EditableEcommerceObject
             if ($modifiers->exists()) {
                 foreach ($modifiers as $modifier) {
                     if ($modifier->ShowForm()) {
-                        if (! isset($formsDone[$modifier->ClassName])) {
+                        if (!isset($formsDone[$modifier->ClassName])) {
                             $formsDone[$modifier->ClassName] = true;
                             $form = $modifier->getModifierForm($optionalController, $optionalValidator);
                             if ($form) {
@@ -807,7 +807,7 @@ class Order extends DataObject implements EditableEcommerceObject
         // we had to add the updateCMSFields hook.
         $this->extend('updateCMSFieldsBefore', $fields);
         $currentMember = Security::getCurrentUser();
-        if (! $this->exists() || ! $this->StatusID) {
+        if (!$this->exists() || !$this->StatusID) {
             $firstStep = DataObject::get_one(OrderStep::class);
             $this->StatusID = $firstStep->ID;
             $this->write();
@@ -825,7 +825,7 @@ class Order extends DataObject implements EditableEcommerceObject
             //and only tryToFinaliseOrder if this is true....
             // if ($_SERVER['REQUEST_URI'] === $this->CMSEditLink() || $_SERVER['REQUEST_URI'] === $this->CMSEditLink('edit')) {
             $this->tryToFinaliseOrder();
-            // }
+        // }
         } else {
             $this->init(true);
             $this->calculateOrderAttributes(true);
@@ -1286,9 +1286,9 @@ class Order extends DataObject implements EditableEcommerceObject
         if ($this->IsSubmitted()) {
             user_error('Can not init an order that has been submitted', E_USER_NOTICE);
         } elseif ($this->StatusID || $recalculate ||  self::get_needs_recalculating($this->ID)) {
-            if (! $this->StatusID) {
+            if (!$this->StatusID) {
                 $createdOrderStatus = DataObject::get_one(OrderStep::class);
-                if (! $createdOrderStatus) {
+                if (!$createdOrderStatus) {
                     user_error('No ordersteps have been created', E_USER_WARNING);
                 }
 
@@ -1313,18 +1313,18 @@ class Order extends DataObject implements EditableEcommerceObject
             $modifiersToAdd = EcommerceConfig::get(Order::class, 'modifiers');
             if (is_array($modifiersToAdd) && [] !== $modifiersToAdd) {
                 foreach ($modifiersToAdd as $numericKey => $className) {
-                    if (! in_array($className, $createdModifiersClassNames, true)) {
+                    if (!in_array($className, $createdModifiersClassNames, true)) {
                         if (class_exists($className)) {
                             $modifier = new $className();
                             //only add the ones that should be added automatically
-                            if (! $modifier->DoNotAddAutomatically()) {
+                            if (!$modifier->DoNotAddAutomatically()) {
                                 if (is_a($modifier, OrderModifier::class)) {
                                     $modifier->OrderID = $this->ID;
                                     $modifier->Sort = $numericKey;
                                     //init method includes a WRITE
                                     $modifier->init();
                                     //IMPORTANT - add as has_many relationship  (Attributes can be a modifier OR an OrderItem)
-                                    if(! $this->exists()) {
+                                    if(!$this->exists()) {
                                         $this->write();
                                     }
                                     $this->Attributes()->add($modifier);
@@ -1388,7 +1388,7 @@ class Order extends DataObject implements EditableEcommerceObject
             $myQueueObject = $queueObjectSingleton->getQueueObject($this);
             if ($myQueueObject) {
                 if ($fromOrderQueue) {
-                    if (! $myQueueObject->InProcess) {
+                    if (!$myQueueObject->InProcess) {
                         return;
                     }
                 } else {
@@ -1551,7 +1551,7 @@ class Order extends DataObject implements EditableEcommerceObject
             $step = OrderStep::get_by_id($this->StatusID);
         }
 
-        if (! $step) {
+        if (!$step) {
             $step = DataObject::get_one(
                 OrderStep::class,
                 null,
@@ -1559,11 +1559,11 @@ class Order extends DataObject implements EditableEcommerceObject
             );
         }
 
-        if (! $step) {
+        if (!$step) {
             $step = OrderStepCreated::create();
         }
 
-        if (! $step) {
+        if (!$step) {
             user_error('You need an order step in your Database.');
         }
 
@@ -1588,7 +1588,7 @@ class Order extends DataObject implements EditableEcommerceObject
         $obj = $this->MyStep();
         if ($obj->HideStepFromCustomer) {
             $obj = OrderStep::get()->where('"OrderStep"."Sort" < ' . $obj->Sort . ' AND "HideStepFromCustomer" = 0')->Last();
-            if (! $obj) {
+            if (!$obj) {
                 $obj = DataObject::get_one(OrderStep::class);
             }
         }
@@ -1621,7 +1621,7 @@ class Order extends DataObject implements EditableEcommerceObject
      */
     public function IsInCart()
     {
-        return ! (bool) $this->IsSubmitted();
+        return !(bool) $this->IsSubmitted();
     }
 
     /**
@@ -1631,7 +1631,7 @@ class Order extends DataObject implements EditableEcommerceObject
      */
     public function IsPastCart()
     {
-        return ! (bool) $this->IsInCart();
+        return !(bool) $this->IsInCart();
     }
 
     /**
@@ -1782,7 +1782,7 @@ class Order extends DataObject implements EditableEcommerceObject
     public function IsAdminCancelled()
     {
         if ($this->IsCancelled()) {
-            if (! $this->IsCustomerCancelled()) {
+            if (!$this->IsCustomerCancelled()) {
                 $admin = Member::get_by_id($this->CancelledByID);
                 if ($admin) {
                     if ($admin->IsShopAdmin()) {
@@ -1833,18 +1833,18 @@ class Order extends DataObject implements EditableEcommerceObject
         } else {
             $member = Security::getCurrentUser();
             if ($member && $member->exists()) {
-                if (! $member->IsShopAdmin()) {
+                if (!$member->IsShopAdmin()) {
                     $this->MemberID = $member->ID;
                     $this->write();
                 }
             }
         }
 
-        if (! ($member && $member->exists())) {
+        if (!($member && $member->exists())) {
             $member = $this->Member();
         }
 
-        if (! ($member && $member->exists())) {
+        if (!($member && $member->exists())) {
             $member = new Member();
         }
 
@@ -1866,7 +1866,7 @@ class Order extends DataObject implements EditableEcommerceObject
      */
     public function CreateOrReturnExistingAddress($className = BillingAddress::class, $alternativeMethodName = '')
     {
-        if (! $this->exists()) {
+        if (!$this->exists()) {
             $this->write();
         }
         $methodNames = [
@@ -1889,7 +1889,7 @@ class Order extends DataObject implements EditableEcommerceObject
             $address = $this->{$methodName}();
         }
 
-        if (! $address) {
+        if (!$address) {
             $address = new $className();
             $member = $this->CreateOrReturnExistingMember();
             if ($member && $member->exists()) {
@@ -1898,7 +1898,7 @@ class Order extends DataObject implements EditableEcommerceObject
         }
 
         if ($address) {
-            if (! $address->exists()) {
+            if (!$address->exists()) {
                 $address->write();
             }
 
@@ -1908,7 +1908,7 @@ class Order extends DataObject implements EditableEcommerceObject
             }
 
             if ($this->{$variableName} !== $address->ID) {
-                if (! $this->IsSubmitted()) {
+                if (!$this->IsSubmitted()) {
                     $this->{$variableName} = $address->ID;
                     $this->write();
                 }
@@ -1983,7 +1983,7 @@ class Order extends DataObject implements EditableEcommerceObject
         if ($this->IsSubmitted()) {
             user_error('Can not set the currency after the order has been submitted', E_USER_NOTICE);
         } else {
-            if (! is_a($newCurrency, EcommerceConfigClassNames::getName(EcommerceCurrency::class))) {
+            if (!is_a($newCurrency, EcommerceConfigClassNames::getName(EcommerceCurrency::class))) {
                 $newCurrency = EcommerceCurrency::default_currency();
             }
 
@@ -2094,11 +2094,11 @@ class Order extends DataObject implements EditableEcommerceObject
      */
     public function getOrderAttributesByType($types)
     {
-        if (! is_array($types) && is_string($types)) {
+        if (!is_array($types) && is_string($types)) {
             $types = [$types];
         }
 
-        if (! is_array($types)) {
+        if (!is_array($types)) {
             user_error('wrong parameter (types) provided in Order::getOrderAttributesByTypes');
         }
 
@@ -2133,7 +2133,7 @@ class Order extends DataObject implements EditableEcommerceObject
      */
     public function Items($filterOrClassName = '')
     {
-        if (! $this->exists()) {
+        if (!$this->exists()) {
             $this->write();
         }
 
@@ -2236,7 +2236,7 @@ class Order extends DataObject implements EditableEcommerceObject
         $modifiers = $this->Modifiers();
         if ($modifiers->exists()) {
             foreach ($modifiers as $modifier) {
-                if (! $modifier->IsRemoved()) { //we just double-check this...
+                if (!$modifier->IsRemoved()) { //we just double-check this...
                     if (is_array($excluded) && in_array($modifier->ClassName, $excluded, true)) {
                         if ($stopAtExcludedModifier) {
                             break;
@@ -2322,10 +2322,10 @@ class Order extends DataObject implements EditableEcommerceObject
      */
     public function canView($member = null)
     {
-        if ($this->overrideCanView && ! $this->IsArchived()) {
+        if ($this->overrideCanView && !$this->IsArchived()) {
             return true;
         }
-        if (! $this->exists()) {
+        if (!$this->exists()) {
             return true;
         }
 
@@ -2423,7 +2423,7 @@ class Order extends DataObject implements EditableEcommerceObject
      */
     public function LessSecureSessionID($size = 7, $start = null)
     {
-        if (! $start || $start < 0 || $start > (32 - $size)) {
+        if (!$start || $start < 0 || $start > (32 - $size)) {
             $start = 0;
         }
 
@@ -2518,7 +2518,7 @@ class Order extends DataObject implements EditableEcommerceObject
 
         $submitErrors = $this->SubmitErrors();
 
-        return ! ($submitErrors && $submitErrors->count());
+        return !($submitErrors && $submitErrors->count());
     }
 
     /**
@@ -2616,7 +2616,7 @@ class Order extends DataObject implements EditableEcommerceObject
         $logs = $this->OrderStatusLogs();
         if ($logs) {
             foreach ($logs as $log) {
-                if (! $log->InternalUseOnly) {
+                if (!$log->InternalUseOnly) {
                     $customerViewableOrderStatusLogs->push($log);
                 }
             }
@@ -2644,7 +2644,7 @@ class Order extends DataObject implements EditableEcommerceObject
             $email = $this->BillingAddress()->Email;
         }
 
-        if (! $email) {
+        if (!$email) {
             if ($this->MemberID && $this->Member()) {
                 $email = $this->Member()->Email;
             }
@@ -2680,7 +2680,7 @@ class Order extends DataObject implements EditableEcommerceObject
 
     public function getEmailLink()
     {
-        if (! isset($_REQUEST['print'])) {
+        if (!isset($_REQUEST['print'])) {
             if ($this->IsSubmitted()) {
                 $step = $this->MyStep();
 
@@ -2708,7 +2708,7 @@ class Order extends DataObject implements EditableEcommerceObject
 
     public function getPrintLink()
     {
-        if (! isset($_REQUEST['print'])) {
+        if (!isset($_REQUEST['print'])) {
             if ($this->IsSubmitted()) {
                 return Director::AbsoluteURL(OrderConfirmationPage::get_order_link($this->ID)) . '?print=1';
             }
@@ -2747,7 +2747,7 @@ class Order extends DataObject implements EditableEcommerceObject
         //important to recalculate! - recalculate = true
         if ($this->IsSubmitted(true)) {
             //add session ID if not added yet...
-            if (! $this->SessionID) {
+            if (!$this->SessionID) {
                 $this->write();
             }
 
@@ -2900,7 +2900,7 @@ class Order extends DataObject implements EditableEcommerceObject
 
             if ($includeName) {
                 $by = _t('Order.BY', 'by');
-                if (! $name) {
+                if (!$name) {
                     if ($this->BillingAddressID) {
                         $billingAddress = $this->BillingAddress();
                         if ($billingAddress && $billingAddress->exists()) {
@@ -2909,13 +2909,13 @@ class Order extends DataObject implements EditableEcommerceObject
                     }
                 }
 
-                if (! $name) {
+                if (!$name) {
                     if ($this->MemberID) {
                         $member = $this->Member();
                         if ($member && $member->exists()) {
                             $memberName = $member->getName();
                             if ($memberName) {
-                                if (! trim((string) $memberName)) {
+                                if (!trim((string) $memberName)) {
                                     $memberName = _t('Order.ANONYMOUS', 'anonymous');
                                 }
 
@@ -3034,7 +3034,7 @@ class Order extends DataObject implements EditableEcommerceObject
         if ($items->exists()) {
             foreach ($items as $item) {
                 if (is_a($item, $type)) {
-                    if(! empty($item->HasPhysicalDispatch)) {
+                    if(!empty($item->HasPhysicalDispatch)) {
                         return true;
                     }
                 }
@@ -3309,7 +3309,7 @@ class Order extends DataObject implements EditableEcommerceObject
 
         if ((EcommerceConfig::get(OrderAddress::class, 'use_shipping_address_for_main_region_and_country') && $countryCodes['Shipping'])
             ||
-            (! $countryCodes['Billing'] && $countryCodes['Shipping'])
+            (!$countryCodes['Billing'] && $countryCodes['Shipping'])
         ) {
             $code = $countryCodes['Shipping'];
         } elseif ($countryCodes['Billing']) {
@@ -3459,7 +3459,7 @@ class Order extends DataObject implements EditableEcommerceObject
     {
         $currency = $this->CurrencyUsed();
         if ($currency && $currency->exists()) {
-            return ! $currency->IsDefault();
+            return !$currency->IsDefault();
         }
 
         return false;
@@ -3471,7 +3471,7 @@ class Order extends DataObject implements EditableEcommerceObject
      */
     public function EnsureCorrectExchangeRate()
     {
-        if (! $this->IsSubmitted()) {
+        if (!$this->IsSubmitted()) {
             $oldExchangeRate = $this->ExchangeRate;
             $currency = $this->CurrencyUsed();
             if ($currency && $currency->exists()) {
@@ -3635,7 +3635,7 @@ class Order extends DataObject implements EditableEcommerceObject
         }
 
         if ($withDetail) {
-            if (! $this->HideStepFromCustomer) {
+            if (!$this->HideStepFromCustomer) {
                 $str .= ' (' . $this->MyStep()->Name . ')';
             }
         }
@@ -3675,7 +3675,7 @@ class Order extends DataObject implements EditableEcommerceObject
                 CartPage::class,
                 ['ClassName' => CartPage::class]
             );
-            if (! $page) {
+            if (!$page) {
                 $page = DataObject::get_one(CheckoutPage::class);
             }
         }
@@ -3882,15 +3882,15 @@ class Order extends DataObject implements EditableEcommerceObject
     protected function onBeforeWrite()
     {
         parent::onBeforeWrite();
-        if (! $this->getCanHaveShippingAddress()) {
+        if (!$this->getCanHaveShippingAddress()) {
             $this->UseShippingAddress = false;
         }
 
-        if (! $this->CurrencyUsedID) {
+        if (!$this->CurrencyUsedID) {
             $this->CurrencyUsedID = EcommerceCurrency::default_currency_id();
         }
 
-        if (! $this->SessionID) {
+        if (!$this->SessionID) {
             $generator = Injector::inst()->create(RandomGenerator::class);
             $token = $generator->randomToken('sha1');
             $this->SessionID = substr((string) $token, 0, 32);
@@ -3905,11 +3905,11 @@ class Order extends DataObject implements EditableEcommerceObject
     {
         parent::onAfterWrite();
         //crucial!
-        if(! $this->IsSubmitted()) {
+        if(!$this->IsSubmitted()) {
             self::set_needs_recalculating(true, $this->ID);
         }
         // quick double-check
-        if ($this->IsCancelled() && ! $this->IsArchived()) {
+        if ($this->IsCancelled() && !$this->IsArchived()) {
             $this->Archive($avoidWrites = true);
         }
 
@@ -4113,12 +4113,12 @@ class Order extends DataObject implements EditableEcommerceObject
         }
 
         if ($from && $to) {
-            if (! class_exists($emailClassName)) {
+            if (!class_exists($emailClassName)) {
                 user_error('Invalid Email ClassName provided: ' . $emailClassName, E_USER_ERROR);
             }
-
+            /** @var OrderEmail $email */
             $email = new $emailClassName();
-            if (! is_a($email, EcommerceConfigClassNames::getName(Email::class))) {
+            if (!is_a($email, EcommerceConfigClassNames::getName(Email::class))) {
                 user_error('No correct email class provided.', E_USER_ERROR);
             }
 
@@ -4147,6 +4147,7 @@ class Order extends DataObject implements EditableEcommerceObject
             // templates within the theme exist
             SetThemed::start();
             $email->setData($arrayData);
+            $email->setBody($message);
             $email->setOrder($this);
             $email->setResend($resend);
             $email->send();
@@ -4187,11 +4188,11 @@ class Order extends DataObject implements EditableEcommerceObject
         $config = EcommerceConfig::inst();
         $replacementArray = [];
         //set subject
-        if (! $subject) {
+        if (!$subject) {
             $subject = $step->CalculatedEmailSubject($this);
         }
 
-        if (! $message) {
+        if (!$message) {
             $message = $step->CalculatedCustomerMessage($this);
         }
 
@@ -4315,11 +4316,11 @@ class Order extends DataObject implements EditableEcommerceObject
     //TODO: please comment why we make use of this function
     protected function getMemberForCanFunctions(Member $member = null)
     {
-        if (! $member) {
+        if (!$member) {
             $member = Security::getCurrentUser();
         }
 
-        if (! $member) {
+        if (!$member) {
             $member = new Member();
             $member->ID = 0;
         }
diff --git a/src/Model/Process/OrderFeedback.php b/src/Model/Process/OrderFeedback.php
index e9231ea9..7768bd0a 100644
--- a/src/Model/Process/OrderFeedback.php
+++ b/src/Model/Process/OrderFeedback.php
@@ -108,7 +108,7 @@ class OrderFeedback extends DataObject implements EditableEcommerceObject
      *
      * @var string
      */
-    private static $plural_name = 'Checkout Feedback Entries';
+    private static $plural_name = 'Feedback Entries';
 
     /**
      * Standard SS variable.
diff --git a/src/Model/Process/OrderStep.php b/src/Model/Process/OrderStep.php
index 720c9e12..6725e88e 100644
--- a/src/Model/Process/OrderStep.php
+++ b/src/Model/Process/OrderStep.php
@@ -435,7 +435,7 @@ class OrderStep extends DataObject implements EditableEcommerceObject
      */
     public static function last_order_step($noCacheValues = false)
     {
-        if (! self::$_last_order_step_cache || $noCacheValues) {
+        if (!self::$_last_order_step_cache || $noCacheValues) {
             self::$_last_order_step_cache = OrderStep::get()->Last();
         }
 
@@ -521,7 +521,7 @@ class OrderStep extends DataObject implements EditableEcommerceObject
     public function getMyCode()
     {
         $array = Config::inst()->get($this->ClassName, 'defaults', Config::UNINHERITED);
-        if (! isset($array['Code'])) {
+        if (!isset($array['Code'])) {
             user_error($this->ClassName . ' does not have a default code specified');
         }
 
@@ -547,6 +547,7 @@ class OrderStep extends DataObject implements EditableEcommerceObject
         //replacing
         if ($this->canBeDefered()) {
             $queueField = $fields->dataFieldByName('OrderProcessQueueEntries');
+            $fields->removeFieldFromTab('Root', 'OrderProcessQueueEntries');
             if ($queueField) {
                 $config = $queueField->getConfig();
                 $config->removeComponentsByType(GridFieldAddExistingAutocompleter::class);
@@ -557,7 +558,7 @@ class OrderStep extends DataObject implements EditableEcommerceObject
                     'Root.Queue',
                     HeaderField::create(
                         'WhenWillThisRun',
-                        $this->humanReadeableDeferTimeInSeconds()
+                        DBField::create_field('HTMLText', $this->humanReadeableDeferTimeInSeconds())
                     )
                 );
             }
@@ -571,12 +572,11 @@ class OrderStep extends DataObject implements EditableEcommerceObject
                         _t('OrderStep.DeferTimeInSeconds', 'Seconds in queue')
                     )
                         ->setDescription(
-                            _t(
-                                'OrderStep.TIME_EXPLANATION',
-                                '86,400 seconds is one day ...
+                            '86,400 seconds is one day ...
                             <br />To make it easier, you can also enter things like <em>1 week</em>, <em>3 hours</em>, or <em>7 minutes</em>.
-                            <br />Non-second entries will automatically be converted to seconds.'
-                            )
+                            <br />Non-second entries will automatically be converted to seconds.
+                            <br />Current value is equal to <strong>' . round($this->DeferTimeInSeconds / 3600) . '</strong> hours,
+                            or approximately <strong>' . round($this->DeferTimeInSeconds / 86400) . '</strong> days.'
                         ),
                 ]
             );
@@ -618,7 +618,7 @@ class OrderStep extends DataObject implements EditableEcommerceObject
                     'Root.CustomerMessage',
                     new LiteralField(
                         'testEmailLink',
-                        '<h3>
+                        '<h3 class="form-field-holder">
                             <a href="' . $testEmailLink . '" data-popup="true" target"_blank" onclick="emailPrompt(this, event);">
                                 ' . _t('OrderStep.VIEW_EMAIL_EXAMPLE', 'Test Email') . '
                             </a>
@@ -647,7 +647,7 @@ class OrderStep extends DataObject implements EditableEcommerceObject
             $fields->removeFieldFromTab('Root.Main', 'CustomerMessage');
         }
         //adding
-        if (! $this->exists() || ! $this->isDefaultStatusOption()) {
+        if (!$this->exists() || !$this->isDefaultStatusOption()) {
             $fields->removeFieldFromTab('Root.Main', 'Code');
             $fields->addFieldToTab('Root.Main', new DropdownField('ClassName', _t('OrderStep.TYPE', 'Type'), self::get_not_created_codes_for_order_steps_to_include()), 'Name');
         }
@@ -870,7 +870,7 @@ class OrderStep extends DataObject implements EditableEcommerceObject
     public function nextStepObject(): ?OrderStep
     {
         $sort = (int) $this->Sort;
-        if (! $sort) {
+        if (!$sort) {
             $sort = 0;
         }
         $where = '"OrderStep"."Sort" >  ' . $sort;
@@ -929,7 +929,7 @@ class OrderStep extends DataObject implements EditableEcommerceObject
      */
     public function hasNotPassed($code)
     {
-        return (bool) ! $this->hasPassed($code, true);
+        return (bool) !$this->hasPassed($code, true);
     }
 
     /**
@@ -937,7 +937,7 @@ class OrderStep extends DataObject implements EditableEcommerceObject
      */
     public function isBefore(string $code): bool
     {
-        return ! (bool) $this->hasPassed($code);
+        return !(bool) $this->hasPassed($code);
     }
 
     /**
@@ -1151,9 +1151,9 @@ class OrderStep extends DataObject implements EditableEcommerceObject
     public function RelevantLogEntryFindOrMake(Order $order)
     {
         $log = $this->RelevantLogEntry($order);
-        if (! $log) {
+        if (!$log) {
             $className = $this->getRelevantLogEntryClassName();
-            if (! class_exists($className)) {
+            if (!class_exists($className)) {
                 $className = OrderStatusLog::class;
             }
             $log = $className::create();
@@ -1211,7 +1211,7 @@ class OrderStep extends DataObject implements EditableEcommerceObject
      */
     public function canView($member = null, $context = [])
     {
-        if (! $member) {
+        if (!$member) {
             $member = Security::getCurrentUser();
         }
         $extended = $this->extendedCan(__FUNCTION__, $member);
@@ -1252,7 +1252,7 @@ class OrderStep extends DataObject implements EditableEcommerceObject
      */
     public function canEdit($member = null, $context = [])
     {
-        if (! $member) {
+        if (!$member) {
             $member = Security::getCurrentUser();
         }
         $extended = $this->extendedCan(__FUNCTION__, $member);
@@ -1291,7 +1291,7 @@ class OrderStep extends DataObject implements EditableEcommerceObject
         if ($this->isDefaultStatusOption()) {
             return false;
         }
-        if (! $member) {
+        if (!$member) {
             $member = Security::getCurrentUser();
         }
         $extended = $this->extendedCan(__FUNCTION__, $member);
@@ -1339,7 +1339,7 @@ class OrderStep extends DataObject implements EditableEcommerceObject
 
     protected function hasStepConditions(): bool
     {
-        if (! empty($this->Config()->get('step_logic_conditions'))) {
+        if (!empty($this->Config()->get('step_logic_conditions'))) {
             return true;
         }
 
@@ -1368,7 +1368,7 @@ class OrderStep extends DataObject implements EditableEcommerceObject
             $this->ShowAsUncompletedOrder = false;
             $this->ShowAsInProcessOrder = false;
         }
-        if (! $this->canBeDefered()) {
+        if (!$this->canBeDefered()) {
             $this->DeferTimeInSeconds = 0;
             $this->DeferFromSubmitTime = 0;
         } elseif (is_numeric($this->DeferTimeInSeconds)) {
@@ -1445,14 +1445,14 @@ class OrderStep extends DataObject implements EditableEcommerceObject
         $emailClassName = ''
     ): bool {
         if (false === (bool) $this->hasBeenSent($order) || true === (bool) $resend) {
-            if (! $subject) {
+            if (!$subject) {
                 $subject = $this->CalculatedEmailSubject($order);
             }
             $useAlternativeEmail = $adminOnlyOrToEmail && filter_var($adminOnlyOrToEmail, FILTER_VALIDATE_EMAIL);
 
             //this is NOT an admin EMAIL
             if ($this->hasCustomerMessage() || $useAlternativeEmail) {
-                if (! $emailClassName) {
+                if (!$emailClassName) {
                     $emailClassName = $this->getEmailClassName();
                 }
                 $outcome = $order->sendEmail(
@@ -1464,7 +1464,7 @@ class OrderStep extends DataObject implements EditableEcommerceObject
                 );
             } else {
                 //ADMIN ONLY ....
-                if (! $emailClassName) {
+                if (!$emailClassName) {
                     $emailClassName = OrderErrorEmail::class;
                 }
                 //looks like we are sending an error, but we are just using this for notification
@@ -1497,7 +1497,7 @@ class OrderStep extends DataObject implements EditableEcommerceObject
                 ->filter(['StatusID' => $this->ID])
                 ->orderBy(DB::get_conn()->random())
                 ->first();
-            if (! $order) {
+            if (!$order) {
                 $order = Order::get()
                     ->where('"OrderStep"."Sort" >= ' . $this->Sort)
                     ->orderBy('IF("OrderStep"."Sort" > ' . $this->Sort . ', 0, 1) ASC, "OrderStep"."Sort" ASC, RAND() ASC')
@@ -1639,7 +1639,7 @@ class OrderStep extends DataObject implements EditableEcommerceObject
                         $filter,
                         $cacheDataObjectGetOne = false
                     );
-                    if (! $obj) {
+                    if (!$obj) {
                         user_error("There was an error in creating the {$code} OrderStep", E_USER_NOTICE);
                     }
                 }
@@ -1647,7 +1647,7 @@ class OrderStep extends DataObject implements EditableEcommerceObject
         }
         $steps = OrderStep::get();
         foreach ($steps as $step) {
-            if (! $step->Description) {
+            if (!$step->Description) {
                 $step->Description = $step->myDescription();
                 $step->write();
             }
diff --git a/src/Model/Process/Referral.php b/src/Model/Process/Referral.php
new file mode 100644
index 00000000..90906fd2
--- /dev/null
+++ b/src/Model/Process/Referral.php
@@ -0,0 +1,292 @@
+<?php
+
+namespace Sunnysideup\Ecommerce\Model\Process;
+
+use SilverStripe\Core\Config\Config;
+use SilverStripe\Core\Injector\Injector;
+use SilverStripe\Forms\NumericField;
+use SilverStripe\ORM\DataObject;
+use SilverStripe\Security\Permission;
+use SilverStripe\Security\Security;
+use Sunnysideup\CmsEditLinkField\Api\CMSEditLinkAPI;
+use Sunnysideup\CmsEditLinkField\Forms\Fields\CMSEditLinkField;
+use Sunnysideup\Ecommerce\Interfaces\EditableEcommerceObject;
+use Sunnysideup\Ecommerce\Model\Extensions\EcommerceRole;
+use Sunnysideup\Ecommerce\Model\Order;
+use Sunnysideup\Ecommerce\Traits\OrderCached;
+
+// Class used to describe the steps in the checkout
+
+/**
+ * Class \Sunnysideup\Ecommerce\Model\Process\OrderFeedback
+ *
+ * @property string $Rating
+ * @property string $Note
+ * @property bool $Actioned
+ * @property int $OrderID
+ * @method \Sunnysideup\Ecommerce\Model\Order Order()
+ */
+class Referral extends DataObject implements EditableEcommerceObject
+{
+    use OrderCached;
+
+    public static function add_referral(Order $order, ?array $params): ?int
+    {
+        if(!empty($params)) {
+            $filter = [
+                'OrderID' => $order->ID,
+            ];
+            $ref = DataObject::get_one(Referral::class, $filter);
+            if(! $ref) {
+                $ref = Referral::create($filter);
+            }
+            $ref->Source = '';
+            $ref->Source .= isset($params['fbclid']) ? 'Facebook Ads' . $params['fbclid'] : '';
+            $ref->Source .= isset($params['gad']) ? 'Google Ads' . $params['gad'] : '';
+            $ref->Source .= isset($params['twclid']) ? 'Twitter Ads' . $params['gad'] : '';
+            $ref->Source .= $params['utm_source'] ?? '';
+
+            $ref->Medium =  '';
+            $ref->Medium .= isset($params['gclsrc']) ? 'Google Source' . $params['gclsrc'] : '';
+            $ref->Medium .= $params['utm_medium'] ?? '';
+
+            $ref->Campaign = '';
+            $ref->Campaign .= isset($params['gclid']) ? 'Google Campaign' . $params['gclid'] : '';
+            $ref->Campaign .= $params['utm_campaign'] ?? '';
+            $ref->Campaign .= $params['utm_term'] ?? '';
+            $ref->Campaign .= $params['utm_content'] ?? '';
+
+            $ref->write();
+        }
+        return null;
+    }
+
+    /**
+     * standard SS variable.
+     *
+     * @var string
+     */
+    private static $table_name = 'Referral';
+
+    private static $db = [
+        'Source' => 'Varchar(100)',
+        'Medium' => 'Varchar(100)',
+        'Campaign' => 'Varchar(100)',
+    ];
+
+    private static $field_labels_right = [
+        'Source' => 'Identifies the source of the traffic (e.g., google, newsletter)',
+        'Medium' => 'The medium used to share the link (e.g., email, cpc)',
+        'Campaign' => 'The specific campaign or promotion (e.g., spring_sale',
+    ];
+
+    /**
+     * standard SS variable.
+     *
+     * @var array
+     */
+    private static $has_one = [
+        'Order' => Order::class,
+    ];
+
+    /**
+     * standard SS variable.
+     *
+     * @var array
+     */
+    private static $searchable_fields = [
+        'Source' => 'PartialMatchFilter',
+        'OrderID' => [
+            'field' => NumericField::class,
+            'title' => 'Order Number',
+        ],
+    ];
+
+    /**
+     * standard SS variable.
+     *
+     * @var array
+     */
+    private static $summary_fields = [
+        'Order.Title' => 'Order',
+        'Order.Total' => 'Total',
+        'Created' => 'When',
+        'Source' => 'Source',
+        'Medium' => 'Medium',
+        'Campaign' => 'Campaign',
+    ];
+
+    /**
+     * standard SS variable.
+     *
+     * @var array
+     */
+    private static $casting = [
+        'Title' => 'Varchar',
+    ];
+
+    /**
+     * standard SS variable.
+     *
+     * @var array
+     */
+    private static $default_sort = [
+        'ID' => 'DESC',
+    ];
+
+    /**
+     * standard SS variable.
+     *
+     * @var string
+     */
+    private static $singular_name = 'Order Referral';
+
+    /**
+     * standard SS variable.
+     *
+     * @var string
+     */
+    private static $plural_name = 'Order Referrals';
+
+    /**
+     * Standard SS variable.
+     *
+     * @var string
+     */
+    private static $description = 'Customer Order Referrals';
+
+    /**
+     * standard SS variable.
+     *
+     * @return bool
+     */
+    private static $can_create = false;
+
+    public function i18n_singular_name()
+    {
+        return _t('OrderFeedback.SINGULAR_NAME', 'Order Referral');
+    }
+
+    public function i18n_plural_name()
+    {
+        return _t('OrderFeedback.PLURAL_NAME', 'Order Referrals');
+    }
+
+    /**
+     * these are only created programmatically
+     * standard SS method.
+     *
+     * @param \SilverStripe\Security\Member $member
+     * @param mixed                         $context
+     *
+     * @return bool
+     */
+    public function canCreate($member = null, $context = [])
+    {
+        return false;
+    }
+
+    /**
+     * standard SS method.
+     *
+     * @param \SilverStripe\Security\Member $member
+     * @param mixed                         $context
+     *
+     * @return bool
+     */
+    public function canView($member = null, $context = [])
+    {
+        if (! $member) {
+            $member = Security::getCurrentUser();
+        }
+        $extended = $this->extendedCan(__FUNCTION__, $member);
+        if (null !== $extended) {
+            return $extended;
+        }
+        if (Permission::checkMember($member, Config::inst()->get(EcommerceRole::class, 'admin_permission_code'))) {
+            return true;
+        }
+
+        return parent::canView($member);
+    }
+
+    /**
+     * standard SS method.
+     *
+     * @param \SilverStripe\Security\Member $member
+     * @param mixed                         $context
+     *
+     * @return bool
+     */
+    public function canEdit($member = null, $context = [])
+    {
+        return false;
+    }
+
+    /**
+     * standard SS method.
+     *
+     * @param \SilverStripe\Security\Member $member
+     *
+     * @return bool
+     */
+    public function canDelete($member = null)
+    {
+        return false;
+    }
+
+    /**
+     * standard SS method.
+     *
+     * @return \SilverStripe\Forms\FieldList
+     */
+    public function getCMSFields()
+    {
+        $fields = parent::getCMSFields();
+        $fields->replaceField(
+            'OrderID',
+            CMSEditLinkField::create(
+                'OrderID',
+                Injector::inst()->get(Order::class)->singular_name(),
+                $this->getOrderCached()
+            )
+        );
+
+        return $fields;
+    }
+
+    /**
+     * link to edit the record.
+     *
+     * @param null|string $action - e.g. edit
+     *
+     * @return string
+     */
+    public function CMSEditLink($action = null)
+    {
+        return CMSEditLinkAPI::find_edit_link_for_object($this, $action);
+    }
+
+    /**
+     * casted variable.
+     *
+     * @return string
+     */
+    public function Title()
+    {
+        return $this->getTitle();
+    }
+
+    public function getTitle()
+    {
+        $string = $this->Created;
+        $order = $this->getOrderCached();
+        if ($order) {
+            $string .= ' (' . $order->getTitle() . ')';
+        }
+        $string .= ' - ' . $this->Source;
+
+        return $string;
+    }
+
+}
